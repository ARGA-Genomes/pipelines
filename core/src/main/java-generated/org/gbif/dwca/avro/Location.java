/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.gbif.dwca.avro;  
@SuppressWarnings("all")
/** A spatial region or named place. */
@org.apache.avro.specific.AvroGenerated
public class Location extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Location\",\"namespace\":\"org.gbif.dwca.avro\",\"doc\":\"A spatial region or named place.\",\"fields\":[{\"name\":\"occurrenceID\",\"type\":\"string\",\"doc\":\"http://rs.tdwg.org/dwc/terms/occurrenceID\"},{\"name\":\"locationID\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/locationID\",\"default\":null},{\"name\":\"higherGeographyID\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/higherGeographyID\",\"default\":null},{\"name\":\"higherGeography\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/higherGeography\",\"default\":null},{\"name\":\"continent\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/continent\",\"default\":null},{\"name\":\"waterBody\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/waterBody\",\"default\":null},{\"name\":\"islandGroup\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/islandGroup\",\"default\":null},{\"name\":\"island\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/island\",\"default\":null},{\"name\":\"country\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/country\",\"default\":null},{\"name\":\"countryCode\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/countryCode\",\"default\":null},{\"name\":\"stateProvince\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/stateProvince\",\"default\":null},{\"name\":\"county\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/county\",\"default\":null},{\"name\":\"municipality\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/municipality\",\"default\":null},{\"name\":\"locality\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/locality\",\"default\":null},{\"name\":\"verbatimLocality\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/verbatimLocality\",\"default\":null},{\"name\":\"minimumElevationInMeters\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/minimumElevationInMeters\",\"default\":null},{\"name\":\"maximumElevationInMeters\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/maximumElevationInMeters\",\"default\":null},{\"name\":\"verbatimElevation\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/verbatimElevation\",\"default\":null},{\"name\":\"minimumDepthInMeters\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/minimumDepthInMeters\",\"default\":null},{\"name\":\"maximumDepthInMeters\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/maximumDepthInMeters\",\"default\":null},{\"name\":\"verbatimDepth\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/verbatimDepth\",\"default\":null},{\"name\":\"minimumDistanceAboveSurfaceInMeters\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/minimumDistanceAboveSurfaceInMeters\",\"default\":null},{\"name\":\"maximumDistanceAboveSurfaceInMeters\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/maximumDistanceAboveSurfaceInMeters\",\"default\":null},{\"name\":\"locationAccordingTo\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/locationAccordingTo\",\"default\":null},{\"name\":\"locationRemarks\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/locationRemarks\",\"default\":null},{\"name\":\"decimalLatitude\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/decimalLatitude\",\"default\":null},{\"name\":\"decimalLongitude\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/decimalLongitude\",\"default\":null},{\"name\":\"geodeticDatum\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/geodeticDatum\",\"default\":null},{\"name\":\"coordinateUncertaintyInMeters\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/coordinateUncertaintyInMeters\",\"default\":null},{\"name\":\"coordinatePrecision\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/coordinatePrecision\",\"default\":null},{\"name\":\"pointRadiusSpatialFit\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/pointRadiusSpatialFit\",\"default\":null},{\"name\":\"verbatimCoordinates\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/verbatimCoordinates\",\"default\":null},{\"name\":\"verbatimLatitude\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/verbatimLatitude\",\"default\":null},{\"name\":\"verbatimLongitude\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/verbatimLongitude\",\"default\":null},{\"name\":\"verbatimCoordinateSystem\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/verbatimCoordinateSystem\",\"default\":null},{\"name\":\"verbatimSRS\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/verbatimSRS\",\"default\":null},{\"name\":\"footprintWKT\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/footprintWKT\",\"default\":null},{\"name\":\"footprintSRS\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/footprintSRS\",\"default\":null},{\"name\":\"footprintSpatialFit\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/footprintSpatialFit\",\"default\":null},{\"name\":\"georeferencedBy\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/georeferencedBy\",\"default\":null},{\"name\":\"georeferencedDate\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/georeferencedDate\",\"default\":null},{\"name\":\"georeferenceProtocol\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/georeferenceProtocol\",\"default\":null},{\"name\":\"georeferenceSources\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/georeferenceSources\",\"default\":null},{\"name\":\"georeferenceVerificationStatus\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/georeferenceVerificationStatus\",\"default\":null},{\"name\":\"georeferenceRemarks\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/georeferenceRemarks\",\"default\":null},{\"name\":\"dcterms_type\",\"type\":[\"null\",\"string\"],\"doc\":\"http://purl.org/dc/terms/type\",\"default\":null},{\"name\":\"dcterms_modified\",\"type\":[\"null\",\"string\"],\"doc\":\"http://purl.org/dc/terms/modified\",\"default\":null},{\"name\":\"dcterms_language\",\"type\":[\"null\",\"string\"],\"doc\":\"http://purl.org/dc/terms/language\",\"default\":null},{\"name\":\"dcterms_license\",\"type\":[\"null\",\"string\"],\"doc\":\"http://purl.org/dc/terms/license\",\"default\":null},{\"name\":\"dcterms_rightsHolder\",\"type\":[\"null\",\"string\"],\"doc\":\"http://purl.org/dc/terms/rightsHolder\",\"default\":null},{\"name\":\"dcterms_accessRights\",\"type\":[\"null\",\"string\"],\"doc\":\"http://purl.org/dc/terms/accessRights\",\"default\":null},{\"name\":\"dcterms_bibliographicCitation\",\"type\":[\"null\",\"string\"],\"doc\":\"http://purl.org/dc/terms/bibliographicCitation\",\"default\":null},{\"name\":\"dcterms_references\",\"type\":[\"null\",\"string\"],\"doc\":\"http://purl.org/dc/terms/references\",\"default\":null},{\"name\":\"institutionID\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/institutionID\",\"default\":null},{\"name\":\"collectionID\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/collectionID\",\"default\":null},{\"name\":\"datasetID\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/datasetID\",\"default\":null},{\"name\":\"institutionCode\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/institutionCode\",\"default\":null},{\"name\":\"collectionCode\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/collectionCode\",\"default\":null},{\"name\":\"datasetName\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/datasetName\",\"default\":null},{\"name\":\"ownerInstitutionCode\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/ownerInstitutionCode\",\"default\":null},{\"name\":\"basisOfRecord\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/basisOfRecord\",\"default\":null},{\"name\":\"informationWithheld\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/informationWithheld\",\"default\":null},{\"name\":\"dataGeneralizations\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/dataGeneralizations\",\"default\":null},{\"name\":\"dynamicProperties\",\"type\":[\"null\",\"string\"],\"doc\":\"http://rs.tdwg.org/dwc/terms/dynamicProperties\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  /** http://rs.tdwg.org/dwc/terms/occurrenceID */
  @Deprecated public java.lang.CharSequence occurrenceID;
  /** http://rs.tdwg.org/dwc/terms/locationID */
  @Deprecated public java.lang.CharSequence locationID;
  /** http://rs.tdwg.org/dwc/terms/higherGeographyID */
  @Deprecated public java.lang.CharSequence higherGeographyID;
  /** http://rs.tdwg.org/dwc/terms/higherGeography */
  @Deprecated public java.lang.CharSequence higherGeography;
  /** http://rs.tdwg.org/dwc/terms/continent */
  @Deprecated public java.lang.CharSequence continent;
  /** http://rs.tdwg.org/dwc/terms/waterBody */
  @Deprecated public java.lang.CharSequence waterBody;
  /** http://rs.tdwg.org/dwc/terms/islandGroup */
  @Deprecated public java.lang.CharSequence islandGroup;
  /** http://rs.tdwg.org/dwc/terms/island */
  @Deprecated public java.lang.CharSequence island;
  /** http://rs.tdwg.org/dwc/terms/country */
  @Deprecated public java.lang.CharSequence country;
  /** http://rs.tdwg.org/dwc/terms/countryCode */
  @Deprecated public java.lang.CharSequence countryCode;
  /** http://rs.tdwg.org/dwc/terms/stateProvince */
  @Deprecated public java.lang.CharSequence stateProvince;
  /** http://rs.tdwg.org/dwc/terms/county */
  @Deprecated public java.lang.CharSequence county;
  /** http://rs.tdwg.org/dwc/terms/municipality */
  @Deprecated public java.lang.CharSequence municipality;
  /** http://rs.tdwg.org/dwc/terms/locality */
  @Deprecated public java.lang.CharSequence locality;
  /** http://rs.tdwg.org/dwc/terms/verbatimLocality */
  @Deprecated public java.lang.CharSequence verbatimLocality;
  /** http://rs.tdwg.org/dwc/terms/minimumElevationInMeters */
  @Deprecated public java.lang.CharSequence minimumElevationInMeters;
  /** http://rs.tdwg.org/dwc/terms/maximumElevationInMeters */
  @Deprecated public java.lang.CharSequence maximumElevationInMeters;
  /** http://rs.tdwg.org/dwc/terms/verbatimElevation */
  @Deprecated public java.lang.CharSequence verbatimElevation;
  /** http://rs.tdwg.org/dwc/terms/minimumDepthInMeters */
  @Deprecated public java.lang.CharSequence minimumDepthInMeters;
  /** http://rs.tdwg.org/dwc/terms/maximumDepthInMeters */
  @Deprecated public java.lang.CharSequence maximumDepthInMeters;
  /** http://rs.tdwg.org/dwc/terms/verbatimDepth */
  @Deprecated public java.lang.CharSequence verbatimDepth;
  /** http://rs.tdwg.org/dwc/terms/minimumDistanceAboveSurfaceInMeters */
  @Deprecated public java.lang.CharSequence minimumDistanceAboveSurfaceInMeters;
  /** http://rs.tdwg.org/dwc/terms/maximumDistanceAboveSurfaceInMeters */
  @Deprecated public java.lang.CharSequence maximumDistanceAboveSurfaceInMeters;
  /** http://rs.tdwg.org/dwc/terms/locationAccordingTo */
  @Deprecated public java.lang.CharSequence locationAccordingTo;
  /** http://rs.tdwg.org/dwc/terms/locationRemarks */
  @Deprecated public java.lang.CharSequence locationRemarks;
  /** http://rs.tdwg.org/dwc/terms/decimalLatitude */
  @Deprecated public java.lang.CharSequence decimalLatitude;
  /** http://rs.tdwg.org/dwc/terms/decimalLongitude */
  @Deprecated public java.lang.CharSequence decimalLongitude;
  /** http://rs.tdwg.org/dwc/terms/geodeticDatum */
  @Deprecated public java.lang.CharSequence geodeticDatum;
  /** http://rs.tdwg.org/dwc/terms/coordinateUncertaintyInMeters */
  @Deprecated public java.lang.CharSequence coordinateUncertaintyInMeters;
  /** http://rs.tdwg.org/dwc/terms/coordinatePrecision */
  @Deprecated public java.lang.CharSequence coordinatePrecision;
  /** http://rs.tdwg.org/dwc/terms/pointRadiusSpatialFit */
  @Deprecated public java.lang.CharSequence pointRadiusSpatialFit;
  /** http://rs.tdwg.org/dwc/terms/verbatimCoordinates */
  @Deprecated public java.lang.CharSequence verbatimCoordinates;
  /** http://rs.tdwg.org/dwc/terms/verbatimLatitude */
  @Deprecated public java.lang.CharSequence verbatimLatitude;
  /** http://rs.tdwg.org/dwc/terms/verbatimLongitude */
  @Deprecated public java.lang.CharSequence verbatimLongitude;
  /** http://rs.tdwg.org/dwc/terms/verbatimCoordinateSystem */
  @Deprecated public java.lang.CharSequence verbatimCoordinateSystem;
  /** http://rs.tdwg.org/dwc/terms/verbatimSRS */
  @Deprecated public java.lang.CharSequence verbatimSRS;
  /** http://rs.tdwg.org/dwc/terms/footprintWKT */
  @Deprecated public java.lang.CharSequence footprintWKT;
  /** http://rs.tdwg.org/dwc/terms/footprintSRS */
  @Deprecated public java.lang.CharSequence footprintSRS;
  /** http://rs.tdwg.org/dwc/terms/footprintSpatialFit */
  @Deprecated public java.lang.CharSequence footprintSpatialFit;
  /** http://rs.tdwg.org/dwc/terms/georeferencedBy */
  @Deprecated public java.lang.CharSequence georeferencedBy;
  /** http://rs.tdwg.org/dwc/terms/georeferencedDate */
  @Deprecated public java.lang.CharSequence georeferencedDate;
  /** http://rs.tdwg.org/dwc/terms/georeferenceProtocol */
  @Deprecated public java.lang.CharSequence georeferenceProtocol;
  /** http://rs.tdwg.org/dwc/terms/georeferenceSources */
  @Deprecated public java.lang.CharSequence georeferenceSources;
  /** http://rs.tdwg.org/dwc/terms/georeferenceVerificationStatus */
  @Deprecated public java.lang.CharSequence georeferenceVerificationStatus;
  /** http://rs.tdwg.org/dwc/terms/georeferenceRemarks */
  @Deprecated public java.lang.CharSequence georeferenceRemarks;
  /** http://purl.org/dc/terms/type */
  @Deprecated public java.lang.CharSequence dcterms_type;
  /** http://purl.org/dc/terms/modified */
  @Deprecated public java.lang.CharSequence dcterms_modified;
  /** http://purl.org/dc/terms/language */
  @Deprecated public java.lang.CharSequence dcterms_language;
  /** http://purl.org/dc/terms/license */
  @Deprecated public java.lang.CharSequence dcterms_license;
  /** http://purl.org/dc/terms/rightsHolder */
  @Deprecated public java.lang.CharSequence dcterms_rightsHolder;
  /** http://purl.org/dc/terms/accessRights */
  @Deprecated public java.lang.CharSequence dcterms_accessRights;
  /** http://purl.org/dc/terms/bibliographicCitation */
  @Deprecated public java.lang.CharSequence dcterms_bibliographicCitation;
  /** http://purl.org/dc/terms/references */
  @Deprecated public java.lang.CharSequence dcterms_references;
  /** http://rs.tdwg.org/dwc/terms/institutionID */
  @Deprecated public java.lang.CharSequence institutionID;
  /** http://rs.tdwg.org/dwc/terms/collectionID */
  @Deprecated public java.lang.CharSequence collectionID;
  /** http://rs.tdwg.org/dwc/terms/datasetID */
  @Deprecated public java.lang.CharSequence datasetID;
  /** http://rs.tdwg.org/dwc/terms/institutionCode */
  @Deprecated public java.lang.CharSequence institutionCode;
  /** http://rs.tdwg.org/dwc/terms/collectionCode */
  @Deprecated public java.lang.CharSequence collectionCode;
  /** http://rs.tdwg.org/dwc/terms/datasetName */
  @Deprecated public java.lang.CharSequence datasetName;
  /** http://rs.tdwg.org/dwc/terms/ownerInstitutionCode */
  @Deprecated public java.lang.CharSequence ownerInstitutionCode;
  /** http://rs.tdwg.org/dwc/terms/basisOfRecord */
  @Deprecated public java.lang.CharSequence basisOfRecord;
  /** http://rs.tdwg.org/dwc/terms/informationWithheld */
  @Deprecated public java.lang.CharSequence informationWithheld;
  /** http://rs.tdwg.org/dwc/terms/dataGeneralizations */
  @Deprecated public java.lang.CharSequence dataGeneralizations;
  /** http://rs.tdwg.org/dwc/terms/dynamicProperties */
  @Deprecated public java.lang.CharSequence dynamicProperties;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Location() {}

  /**
   * All-args constructor.
   */
  public Location(java.lang.CharSequence occurrenceID, java.lang.CharSequence locationID, java.lang.CharSequence higherGeographyID, java.lang.CharSequence higherGeography, java.lang.CharSequence continent, java.lang.CharSequence waterBody, java.lang.CharSequence islandGroup, java.lang.CharSequence island, java.lang.CharSequence country, java.lang.CharSequence countryCode, java.lang.CharSequence stateProvince, java.lang.CharSequence county, java.lang.CharSequence municipality, java.lang.CharSequence locality, java.lang.CharSequence verbatimLocality, java.lang.CharSequence minimumElevationInMeters, java.lang.CharSequence maximumElevationInMeters, java.lang.CharSequence verbatimElevation, java.lang.CharSequence minimumDepthInMeters, java.lang.CharSequence maximumDepthInMeters, java.lang.CharSequence verbatimDepth, java.lang.CharSequence minimumDistanceAboveSurfaceInMeters, java.lang.CharSequence maximumDistanceAboveSurfaceInMeters, java.lang.CharSequence locationAccordingTo, java.lang.CharSequence locationRemarks, java.lang.CharSequence decimalLatitude, java.lang.CharSequence decimalLongitude, java.lang.CharSequence geodeticDatum, java.lang.CharSequence coordinateUncertaintyInMeters, java.lang.CharSequence coordinatePrecision, java.lang.CharSequence pointRadiusSpatialFit, java.lang.CharSequence verbatimCoordinates, java.lang.CharSequence verbatimLatitude, java.lang.CharSequence verbatimLongitude, java.lang.CharSequence verbatimCoordinateSystem, java.lang.CharSequence verbatimSRS, java.lang.CharSequence footprintWKT, java.lang.CharSequence footprintSRS, java.lang.CharSequence footprintSpatialFit, java.lang.CharSequence georeferencedBy, java.lang.CharSequence georeferencedDate, java.lang.CharSequence georeferenceProtocol, java.lang.CharSequence georeferenceSources, java.lang.CharSequence georeferenceVerificationStatus, java.lang.CharSequence georeferenceRemarks, java.lang.CharSequence dcterms_type, java.lang.CharSequence dcterms_modified, java.lang.CharSequence dcterms_language, java.lang.CharSequence dcterms_license, java.lang.CharSequence dcterms_rightsHolder, java.lang.CharSequence dcterms_accessRights, java.lang.CharSequence dcterms_bibliographicCitation, java.lang.CharSequence dcterms_references, java.lang.CharSequence institutionID, java.lang.CharSequence collectionID, java.lang.CharSequence datasetID, java.lang.CharSequence institutionCode, java.lang.CharSequence collectionCode, java.lang.CharSequence datasetName, java.lang.CharSequence ownerInstitutionCode, java.lang.CharSequence basisOfRecord, java.lang.CharSequence informationWithheld, java.lang.CharSequence dataGeneralizations, java.lang.CharSequence dynamicProperties) {
    this.occurrenceID = occurrenceID;
    this.locationID = locationID;
    this.higherGeographyID = higherGeographyID;
    this.higherGeography = higherGeography;
    this.continent = continent;
    this.waterBody = waterBody;
    this.islandGroup = islandGroup;
    this.island = island;
    this.country = country;
    this.countryCode = countryCode;
    this.stateProvince = stateProvince;
    this.county = county;
    this.municipality = municipality;
    this.locality = locality;
    this.verbatimLocality = verbatimLocality;
    this.minimumElevationInMeters = minimumElevationInMeters;
    this.maximumElevationInMeters = maximumElevationInMeters;
    this.verbatimElevation = verbatimElevation;
    this.minimumDepthInMeters = minimumDepthInMeters;
    this.maximumDepthInMeters = maximumDepthInMeters;
    this.verbatimDepth = verbatimDepth;
    this.minimumDistanceAboveSurfaceInMeters = minimumDistanceAboveSurfaceInMeters;
    this.maximumDistanceAboveSurfaceInMeters = maximumDistanceAboveSurfaceInMeters;
    this.locationAccordingTo = locationAccordingTo;
    this.locationRemarks = locationRemarks;
    this.decimalLatitude = decimalLatitude;
    this.decimalLongitude = decimalLongitude;
    this.geodeticDatum = geodeticDatum;
    this.coordinateUncertaintyInMeters = coordinateUncertaintyInMeters;
    this.coordinatePrecision = coordinatePrecision;
    this.pointRadiusSpatialFit = pointRadiusSpatialFit;
    this.verbatimCoordinates = verbatimCoordinates;
    this.verbatimLatitude = verbatimLatitude;
    this.verbatimLongitude = verbatimLongitude;
    this.verbatimCoordinateSystem = verbatimCoordinateSystem;
    this.verbatimSRS = verbatimSRS;
    this.footprintWKT = footprintWKT;
    this.footprintSRS = footprintSRS;
    this.footprintSpatialFit = footprintSpatialFit;
    this.georeferencedBy = georeferencedBy;
    this.georeferencedDate = georeferencedDate;
    this.georeferenceProtocol = georeferenceProtocol;
    this.georeferenceSources = georeferenceSources;
    this.georeferenceVerificationStatus = georeferenceVerificationStatus;
    this.georeferenceRemarks = georeferenceRemarks;
    this.dcterms_type = dcterms_type;
    this.dcterms_modified = dcterms_modified;
    this.dcterms_language = dcterms_language;
    this.dcterms_license = dcterms_license;
    this.dcterms_rightsHolder = dcterms_rightsHolder;
    this.dcterms_accessRights = dcterms_accessRights;
    this.dcterms_bibliographicCitation = dcterms_bibliographicCitation;
    this.dcterms_references = dcterms_references;
    this.institutionID = institutionID;
    this.collectionID = collectionID;
    this.datasetID = datasetID;
    this.institutionCode = institutionCode;
    this.collectionCode = collectionCode;
    this.datasetName = datasetName;
    this.ownerInstitutionCode = ownerInstitutionCode;
    this.basisOfRecord = basisOfRecord;
    this.informationWithheld = informationWithheld;
    this.dataGeneralizations = dataGeneralizations;
    this.dynamicProperties = dynamicProperties;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return occurrenceID;
    case 1: return locationID;
    case 2: return higherGeographyID;
    case 3: return higherGeography;
    case 4: return continent;
    case 5: return waterBody;
    case 6: return islandGroup;
    case 7: return island;
    case 8: return country;
    case 9: return countryCode;
    case 10: return stateProvince;
    case 11: return county;
    case 12: return municipality;
    case 13: return locality;
    case 14: return verbatimLocality;
    case 15: return minimumElevationInMeters;
    case 16: return maximumElevationInMeters;
    case 17: return verbatimElevation;
    case 18: return minimumDepthInMeters;
    case 19: return maximumDepthInMeters;
    case 20: return verbatimDepth;
    case 21: return minimumDistanceAboveSurfaceInMeters;
    case 22: return maximumDistanceAboveSurfaceInMeters;
    case 23: return locationAccordingTo;
    case 24: return locationRemarks;
    case 25: return decimalLatitude;
    case 26: return decimalLongitude;
    case 27: return geodeticDatum;
    case 28: return coordinateUncertaintyInMeters;
    case 29: return coordinatePrecision;
    case 30: return pointRadiusSpatialFit;
    case 31: return verbatimCoordinates;
    case 32: return verbatimLatitude;
    case 33: return verbatimLongitude;
    case 34: return verbatimCoordinateSystem;
    case 35: return verbatimSRS;
    case 36: return footprintWKT;
    case 37: return footprintSRS;
    case 38: return footprintSpatialFit;
    case 39: return georeferencedBy;
    case 40: return georeferencedDate;
    case 41: return georeferenceProtocol;
    case 42: return georeferenceSources;
    case 43: return georeferenceVerificationStatus;
    case 44: return georeferenceRemarks;
    case 45: return dcterms_type;
    case 46: return dcterms_modified;
    case 47: return dcterms_language;
    case 48: return dcterms_license;
    case 49: return dcterms_rightsHolder;
    case 50: return dcterms_accessRights;
    case 51: return dcterms_bibliographicCitation;
    case 52: return dcterms_references;
    case 53: return institutionID;
    case 54: return collectionID;
    case 55: return datasetID;
    case 56: return institutionCode;
    case 57: return collectionCode;
    case 58: return datasetName;
    case 59: return ownerInstitutionCode;
    case 60: return basisOfRecord;
    case 61: return informationWithheld;
    case 62: return dataGeneralizations;
    case 63: return dynamicProperties;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: occurrenceID = (java.lang.CharSequence)value$; break;
    case 1: locationID = (java.lang.CharSequence)value$; break;
    case 2: higherGeographyID = (java.lang.CharSequence)value$; break;
    case 3: higherGeography = (java.lang.CharSequence)value$; break;
    case 4: continent = (java.lang.CharSequence)value$; break;
    case 5: waterBody = (java.lang.CharSequence)value$; break;
    case 6: islandGroup = (java.lang.CharSequence)value$; break;
    case 7: island = (java.lang.CharSequence)value$; break;
    case 8: country = (java.lang.CharSequence)value$; break;
    case 9: countryCode = (java.lang.CharSequence)value$; break;
    case 10: stateProvince = (java.lang.CharSequence)value$; break;
    case 11: county = (java.lang.CharSequence)value$; break;
    case 12: municipality = (java.lang.CharSequence)value$; break;
    case 13: locality = (java.lang.CharSequence)value$; break;
    case 14: verbatimLocality = (java.lang.CharSequence)value$; break;
    case 15: minimumElevationInMeters = (java.lang.CharSequence)value$; break;
    case 16: maximumElevationInMeters = (java.lang.CharSequence)value$; break;
    case 17: verbatimElevation = (java.lang.CharSequence)value$; break;
    case 18: minimumDepthInMeters = (java.lang.CharSequence)value$; break;
    case 19: maximumDepthInMeters = (java.lang.CharSequence)value$; break;
    case 20: verbatimDepth = (java.lang.CharSequence)value$; break;
    case 21: minimumDistanceAboveSurfaceInMeters = (java.lang.CharSequence)value$; break;
    case 22: maximumDistanceAboveSurfaceInMeters = (java.lang.CharSequence)value$; break;
    case 23: locationAccordingTo = (java.lang.CharSequence)value$; break;
    case 24: locationRemarks = (java.lang.CharSequence)value$; break;
    case 25: decimalLatitude = (java.lang.CharSequence)value$; break;
    case 26: decimalLongitude = (java.lang.CharSequence)value$; break;
    case 27: geodeticDatum = (java.lang.CharSequence)value$; break;
    case 28: coordinateUncertaintyInMeters = (java.lang.CharSequence)value$; break;
    case 29: coordinatePrecision = (java.lang.CharSequence)value$; break;
    case 30: pointRadiusSpatialFit = (java.lang.CharSequence)value$; break;
    case 31: verbatimCoordinates = (java.lang.CharSequence)value$; break;
    case 32: verbatimLatitude = (java.lang.CharSequence)value$; break;
    case 33: verbatimLongitude = (java.lang.CharSequence)value$; break;
    case 34: verbatimCoordinateSystem = (java.lang.CharSequence)value$; break;
    case 35: verbatimSRS = (java.lang.CharSequence)value$; break;
    case 36: footprintWKT = (java.lang.CharSequence)value$; break;
    case 37: footprintSRS = (java.lang.CharSequence)value$; break;
    case 38: footprintSpatialFit = (java.lang.CharSequence)value$; break;
    case 39: georeferencedBy = (java.lang.CharSequence)value$; break;
    case 40: georeferencedDate = (java.lang.CharSequence)value$; break;
    case 41: georeferenceProtocol = (java.lang.CharSequence)value$; break;
    case 42: georeferenceSources = (java.lang.CharSequence)value$; break;
    case 43: georeferenceVerificationStatus = (java.lang.CharSequence)value$; break;
    case 44: georeferenceRemarks = (java.lang.CharSequence)value$; break;
    case 45: dcterms_type = (java.lang.CharSequence)value$; break;
    case 46: dcterms_modified = (java.lang.CharSequence)value$; break;
    case 47: dcterms_language = (java.lang.CharSequence)value$; break;
    case 48: dcterms_license = (java.lang.CharSequence)value$; break;
    case 49: dcterms_rightsHolder = (java.lang.CharSequence)value$; break;
    case 50: dcterms_accessRights = (java.lang.CharSequence)value$; break;
    case 51: dcterms_bibliographicCitation = (java.lang.CharSequence)value$; break;
    case 52: dcterms_references = (java.lang.CharSequence)value$; break;
    case 53: institutionID = (java.lang.CharSequence)value$; break;
    case 54: collectionID = (java.lang.CharSequence)value$; break;
    case 55: datasetID = (java.lang.CharSequence)value$; break;
    case 56: institutionCode = (java.lang.CharSequence)value$; break;
    case 57: collectionCode = (java.lang.CharSequence)value$; break;
    case 58: datasetName = (java.lang.CharSequence)value$; break;
    case 59: ownerInstitutionCode = (java.lang.CharSequence)value$; break;
    case 60: basisOfRecord = (java.lang.CharSequence)value$; break;
    case 61: informationWithheld = (java.lang.CharSequence)value$; break;
    case 62: dataGeneralizations = (java.lang.CharSequence)value$; break;
    case 63: dynamicProperties = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'occurrenceID' field.
   * http://rs.tdwg.org/dwc/terms/occurrenceID   */
  public java.lang.CharSequence getOccurrenceID() {
    return occurrenceID;
  }

  /**
   * Sets the value of the 'occurrenceID' field.
   * http://rs.tdwg.org/dwc/terms/occurrenceID   * @param value the value to set.
   */
  public void setOccurrenceID(java.lang.CharSequence value) {
    this.occurrenceID = value;
  }

  /**
   * Gets the value of the 'locationID' field.
   * http://rs.tdwg.org/dwc/terms/locationID   */
  public java.lang.CharSequence getLocationID() {
    return locationID;
  }

  /**
   * Sets the value of the 'locationID' field.
   * http://rs.tdwg.org/dwc/terms/locationID   * @param value the value to set.
   */
  public void setLocationID(java.lang.CharSequence value) {
    this.locationID = value;
  }

  /**
   * Gets the value of the 'higherGeographyID' field.
   * http://rs.tdwg.org/dwc/terms/higherGeographyID   */
  public java.lang.CharSequence getHigherGeographyID() {
    return higherGeographyID;
  }

  /**
   * Sets the value of the 'higherGeographyID' field.
   * http://rs.tdwg.org/dwc/terms/higherGeographyID   * @param value the value to set.
   */
  public void setHigherGeographyID(java.lang.CharSequence value) {
    this.higherGeographyID = value;
  }

  /**
   * Gets the value of the 'higherGeography' field.
   * http://rs.tdwg.org/dwc/terms/higherGeography   */
  public java.lang.CharSequence getHigherGeography() {
    return higherGeography;
  }

  /**
   * Sets the value of the 'higherGeography' field.
   * http://rs.tdwg.org/dwc/terms/higherGeography   * @param value the value to set.
   */
  public void setHigherGeography(java.lang.CharSequence value) {
    this.higherGeography = value;
  }

  /**
   * Gets the value of the 'continent' field.
   * http://rs.tdwg.org/dwc/terms/continent   */
  public java.lang.CharSequence getContinent() {
    return continent;
  }

  /**
   * Sets the value of the 'continent' field.
   * http://rs.tdwg.org/dwc/terms/continent   * @param value the value to set.
   */
  public void setContinent(java.lang.CharSequence value) {
    this.continent = value;
  }

  /**
   * Gets the value of the 'waterBody' field.
   * http://rs.tdwg.org/dwc/terms/waterBody   */
  public java.lang.CharSequence getWaterBody() {
    return waterBody;
  }

  /**
   * Sets the value of the 'waterBody' field.
   * http://rs.tdwg.org/dwc/terms/waterBody   * @param value the value to set.
   */
  public void setWaterBody(java.lang.CharSequence value) {
    this.waterBody = value;
  }

  /**
   * Gets the value of the 'islandGroup' field.
   * http://rs.tdwg.org/dwc/terms/islandGroup   */
  public java.lang.CharSequence getIslandGroup() {
    return islandGroup;
  }

  /**
   * Sets the value of the 'islandGroup' field.
   * http://rs.tdwg.org/dwc/terms/islandGroup   * @param value the value to set.
   */
  public void setIslandGroup(java.lang.CharSequence value) {
    this.islandGroup = value;
  }

  /**
   * Gets the value of the 'island' field.
   * http://rs.tdwg.org/dwc/terms/island   */
  public java.lang.CharSequence getIsland() {
    return island;
  }

  /**
   * Sets the value of the 'island' field.
   * http://rs.tdwg.org/dwc/terms/island   * @param value the value to set.
   */
  public void setIsland(java.lang.CharSequence value) {
    this.island = value;
  }

  /**
   * Gets the value of the 'country' field.
   * http://rs.tdwg.org/dwc/terms/country   */
  public java.lang.CharSequence getCountry() {
    return country;
  }

  /**
   * Sets the value of the 'country' field.
   * http://rs.tdwg.org/dwc/terms/country   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'countryCode' field.
   * http://rs.tdwg.org/dwc/terms/countryCode   */
  public java.lang.CharSequence getCountryCode() {
    return countryCode;
  }

  /**
   * Sets the value of the 'countryCode' field.
   * http://rs.tdwg.org/dwc/terms/countryCode   * @param value the value to set.
   */
  public void setCountryCode(java.lang.CharSequence value) {
    this.countryCode = value;
  }

  /**
   * Gets the value of the 'stateProvince' field.
   * http://rs.tdwg.org/dwc/terms/stateProvince   */
  public java.lang.CharSequence getStateProvince() {
    return stateProvince;
  }

  /**
   * Sets the value of the 'stateProvince' field.
   * http://rs.tdwg.org/dwc/terms/stateProvince   * @param value the value to set.
   */
  public void setStateProvince(java.lang.CharSequence value) {
    this.stateProvince = value;
  }

  /**
   * Gets the value of the 'county' field.
   * http://rs.tdwg.org/dwc/terms/county   */
  public java.lang.CharSequence getCounty() {
    return county;
  }

  /**
   * Sets the value of the 'county' field.
   * http://rs.tdwg.org/dwc/terms/county   * @param value the value to set.
   */
  public void setCounty(java.lang.CharSequence value) {
    this.county = value;
  }

  /**
   * Gets the value of the 'municipality' field.
   * http://rs.tdwg.org/dwc/terms/municipality   */
  public java.lang.CharSequence getMunicipality() {
    return municipality;
  }

  /**
   * Sets the value of the 'municipality' field.
   * http://rs.tdwg.org/dwc/terms/municipality   * @param value the value to set.
   */
  public void setMunicipality(java.lang.CharSequence value) {
    this.municipality = value;
  }

  /**
   * Gets the value of the 'locality' field.
   * http://rs.tdwg.org/dwc/terms/locality   */
  public java.lang.CharSequence getLocality() {
    return locality;
  }

  /**
   * Sets the value of the 'locality' field.
   * http://rs.tdwg.org/dwc/terms/locality   * @param value the value to set.
   */
  public void setLocality(java.lang.CharSequence value) {
    this.locality = value;
  }

  /**
   * Gets the value of the 'verbatimLocality' field.
   * http://rs.tdwg.org/dwc/terms/verbatimLocality   */
  public java.lang.CharSequence getVerbatimLocality() {
    return verbatimLocality;
  }

  /**
   * Sets the value of the 'verbatimLocality' field.
   * http://rs.tdwg.org/dwc/terms/verbatimLocality   * @param value the value to set.
   */
  public void setVerbatimLocality(java.lang.CharSequence value) {
    this.verbatimLocality = value;
  }

  /**
   * Gets the value of the 'minimumElevationInMeters' field.
   * http://rs.tdwg.org/dwc/terms/minimumElevationInMeters   */
  public java.lang.CharSequence getMinimumElevationInMeters() {
    return minimumElevationInMeters;
  }

  /**
   * Sets the value of the 'minimumElevationInMeters' field.
   * http://rs.tdwg.org/dwc/terms/minimumElevationInMeters   * @param value the value to set.
   */
  public void setMinimumElevationInMeters(java.lang.CharSequence value) {
    this.minimumElevationInMeters = value;
  }

  /**
   * Gets the value of the 'maximumElevationInMeters' field.
   * http://rs.tdwg.org/dwc/terms/maximumElevationInMeters   */
  public java.lang.CharSequence getMaximumElevationInMeters() {
    return maximumElevationInMeters;
  }

  /**
   * Sets the value of the 'maximumElevationInMeters' field.
   * http://rs.tdwg.org/dwc/terms/maximumElevationInMeters   * @param value the value to set.
   */
  public void setMaximumElevationInMeters(java.lang.CharSequence value) {
    this.maximumElevationInMeters = value;
  }

  /**
   * Gets the value of the 'verbatimElevation' field.
   * http://rs.tdwg.org/dwc/terms/verbatimElevation   */
  public java.lang.CharSequence getVerbatimElevation() {
    return verbatimElevation;
  }

  /**
   * Sets the value of the 'verbatimElevation' field.
   * http://rs.tdwg.org/dwc/terms/verbatimElevation   * @param value the value to set.
   */
  public void setVerbatimElevation(java.lang.CharSequence value) {
    this.verbatimElevation = value;
  }

  /**
   * Gets the value of the 'minimumDepthInMeters' field.
   * http://rs.tdwg.org/dwc/terms/minimumDepthInMeters   */
  public java.lang.CharSequence getMinimumDepthInMeters() {
    return minimumDepthInMeters;
  }

  /**
   * Sets the value of the 'minimumDepthInMeters' field.
   * http://rs.tdwg.org/dwc/terms/minimumDepthInMeters   * @param value the value to set.
   */
  public void setMinimumDepthInMeters(java.lang.CharSequence value) {
    this.minimumDepthInMeters = value;
  }

  /**
   * Gets the value of the 'maximumDepthInMeters' field.
   * http://rs.tdwg.org/dwc/terms/maximumDepthInMeters   */
  public java.lang.CharSequence getMaximumDepthInMeters() {
    return maximumDepthInMeters;
  }

  /**
   * Sets the value of the 'maximumDepthInMeters' field.
   * http://rs.tdwg.org/dwc/terms/maximumDepthInMeters   * @param value the value to set.
   */
  public void setMaximumDepthInMeters(java.lang.CharSequence value) {
    this.maximumDepthInMeters = value;
  }

  /**
   * Gets the value of the 'verbatimDepth' field.
   * http://rs.tdwg.org/dwc/terms/verbatimDepth   */
  public java.lang.CharSequence getVerbatimDepth() {
    return verbatimDepth;
  }

  /**
   * Sets the value of the 'verbatimDepth' field.
   * http://rs.tdwg.org/dwc/terms/verbatimDepth   * @param value the value to set.
   */
  public void setVerbatimDepth(java.lang.CharSequence value) {
    this.verbatimDepth = value;
  }

  /**
   * Gets the value of the 'minimumDistanceAboveSurfaceInMeters' field.
   * http://rs.tdwg.org/dwc/terms/minimumDistanceAboveSurfaceInMeters   */
  public java.lang.CharSequence getMinimumDistanceAboveSurfaceInMeters() {
    return minimumDistanceAboveSurfaceInMeters;
  }

  /**
   * Sets the value of the 'minimumDistanceAboveSurfaceInMeters' field.
   * http://rs.tdwg.org/dwc/terms/minimumDistanceAboveSurfaceInMeters   * @param value the value to set.
   */
  public void setMinimumDistanceAboveSurfaceInMeters(java.lang.CharSequence value) {
    this.minimumDistanceAboveSurfaceInMeters = value;
  }

  /**
   * Gets the value of the 'maximumDistanceAboveSurfaceInMeters' field.
   * http://rs.tdwg.org/dwc/terms/maximumDistanceAboveSurfaceInMeters   */
  public java.lang.CharSequence getMaximumDistanceAboveSurfaceInMeters() {
    return maximumDistanceAboveSurfaceInMeters;
  }

  /**
   * Sets the value of the 'maximumDistanceAboveSurfaceInMeters' field.
   * http://rs.tdwg.org/dwc/terms/maximumDistanceAboveSurfaceInMeters   * @param value the value to set.
   */
  public void setMaximumDistanceAboveSurfaceInMeters(java.lang.CharSequence value) {
    this.maximumDistanceAboveSurfaceInMeters = value;
  }

  /**
   * Gets the value of the 'locationAccordingTo' field.
   * http://rs.tdwg.org/dwc/terms/locationAccordingTo   */
  public java.lang.CharSequence getLocationAccordingTo() {
    return locationAccordingTo;
  }

  /**
   * Sets the value of the 'locationAccordingTo' field.
   * http://rs.tdwg.org/dwc/terms/locationAccordingTo   * @param value the value to set.
   */
  public void setLocationAccordingTo(java.lang.CharSequence value) {
    this.locationAccordingTo = value;
  }

  /**
   * Gets the value of the 'locationRemarks' field.
   * http://rs.tdwg.org/dwc/terms/locationRemarks   */
  public java.lang.CharSequence getLocationRemarks() {
    return locationRemarks;
  }

  /**
   * Sets the value of the 'locationRemarks' field.
   * http://rs.tdwg.org/dwc/terms/locationRemarks   * @param value the value to set.
   */
  public void setLocationRemarks(java.lang.CharSequence value) {
    this.locationRemarks = value;
  }

  /**
   * Gets the value of the 'decimalLatitude' field.
   * http://rs.tdwg.org/dwc/terms/decimalLatitude   */
  public java.lang.CharSequence getDecimalLatitude() {
    return decimalLatitude;
  }

  /**
   * Sets the value of the 'decimalLatitude' field.
   * http://rs.tdwg.org/dwc/terms/decimalLatitude   * @param value the value to set.
   */
  public void setDecimalLatitude(java.lang.CharSequence value) {
    this.decimalLatitude = value;
  }

  /**
   * Gets the value of the 'decimalLongitude' field.
   * http://rs.tdwg.org/dwc/terms/decimalLongitude   */
  public java.lang.CharSequence getDecimalLongitude() {
    return decimalLongitude;
  }

  /**
   * Sets the value of the 'decimalLongitude' field.
   * http://rs.tdwg.org/dwc/terms/decimalLongitude   * @param value the value to set.
   */
  public void setDecimalLongitude(java.lang.CharSequence value) {
    this.decimalLongitude = value;
  }

  /**
   * Gets the value of the 'geodeticDatum' field.
   * http://rs.tdwg.org/dwc/terms/geodeticDatum   */
  public java.lang.CharSequence getGeodeticDatum() {
    return geodeticDatum;
  }

  /**
   * Sets the value of the 'geodeticDatum' field.
   * http://rs.tdwg.org/dwc/terms/geodeticDatum   * @param value the value to set.
   */
  public void setGeodeticDatum(java.lang.CharSequence value) {
    this.geodeticDatum = value;
  }

  /**
   * Gets the value of the 'coordinateUncertaintyInMeters' field.
   * http://rs.tdwg.org/dwc/terms/coordinateUncertaintyInMeters   */
  public java.lang.CharSequence getCoordinateUncertaintyInMeters() {
    return coordinateUncertaintyInMeters;
  }

  /**
   * Sets the value of the 'coordinateUncertaintyInMeters' field.
   * http://rs.tdwg.org/dwc/terms/coordinateUncertaintyInMeters   * @param value the value to set.
   */
  public void setCoordinateUncertaintyInMeters(java.lang.CharSequence value) {
    this.coordinateUncertaintyInMeters = value;
  }

  /**
   * Gets the value of the 'coordinatePrecision' field.
   * http://rs.tdwg.org/dwc/terms/coordinatePrecision   */
  public java.lang.CharSequence getCoordinatePrecision() {
    return coordinatePrecision;
  }

  /**
   * Sets the value of the 'coordinatePrecision' field.
   * http://rs.tdwg.org/dwc/terms/coordinatePrecision   * @param value the value to set.
   */
  public void setCoordinatePrecision(java.lang.CharSequence value) {
    this.coordinatePrecision = value;
  }

  /**
   * Gets the value of the 'pointRadiusSpatialFit' field.
   * http://rs.tdwg.org/dwc/terms/pointRadiusSpatialFit   */
  public java.lang.CharSequence getPointRadiusSpatialFit() {
    return pointRadiusSpatialFit;
  }

  /**
   * Sets the value of the 'pointRadiusSpatialFit' field.
   * http://rs.tdwg.org/dwc/terms/pointRadiusSpatialFit   * @param value the value to set.
   */
  public void setPointRadiusSpatialFit(java.lang.CharSequence value) {
    this.pointRadiusSpatialFit = value;
  }

  /**
   * Gets the value of the 'verbatimCoordinates' field.
   * http://rs.tdwg.org/dwc/terms/verbatimCoordinates   */
  public java.lang.CharSequence getVerbatimCoordinates() {
    return verbatimCoordinates;
  }

  /**
   * Sets the value of the 'verbatimCoordinates' field.
   * http://rs.tdwg.org/dwc/terms/verbatimCoordinates   * @param value the value to set.
   */
  public void setVerbatimCoordinates(java.lang.CharSequence value) {
    this.verbatimCoordinates = value;
  }

  /**
   * Gets the value of the 'verbatimLatitude' field.
   * http://rs.tdwg.org/dwc/terms/verbatimLatitude   */
  public java.lang.CharSequence getVerbatimLatitude() {
    return verbatimLatitude;
  }

  /**
   * Sets the value of the 'verbatimLatitude' field.
   * http://rs.tdwg.org/dwc/terms/verbatimLatitude   * @param value the value to set.
   */
  public void setVerbatimLatitude(java.lang.CharSequence value) {
    this.verbatimLatitude = value;
  }

  /**
   * Gets the value of the 'verbatimLongitude' field.
   * http://rs.tdwg.org/dwc/terms/verbatimLongitude   */
  public java.lang.CharSequence getVerbatimLongitude() {
    return verbatimLongitude;
  }

  /**
   * Sets the value of the 'verbatimLongitude' field.
   * http://rs.tdwg.org/dwc/terms/verbatimLongitude   * @param value the value to set.
   */
  public void setVerbatimLongitude(java.lang.CharSequence value) {
    this.verbatimLongitude = value;
  }

  /**
   * Gets the value of the 'verbatimCoordinateSystem' field.
   * http://rs.tdwg.org/dwc/terms/verbatimCoordinateSystem   */
  public java.lang.CharSequence getVerbatimCoordinateSystem() {
    return verbatimCoordinateSystem;
  }

  /**
   * Sets the value of the 'verbatimCoordinateSystem' field.
   * http://rs.tdwg.org/dwc/terms/verbatimCoordinateSystem   * @param value the value to set.
   */
  public void setVerbatimCoordinateSystem(java.lang.CharSequence value) {
    this.verbatimCoordinateSystem = value;
  }

  /**
   * Gets the value of the 'verbatimSRS' field.
   * http://rs.tdwg.org/dwc/terms/verbatimSRS   */
  public java.lang.CharSequence getVerbatimSRS() {
    return verbatimSRS;
  }

  /**
   * Sets the value of the 'verbatimSRS' field.
   * http://rs.tdwg.org/dwc/terms/verbatimSRS   * @param value the value to set.
   */
  public void setVerbatimSRS(java.lang.CharSequence value) {
    this.verbatimSRS = value;
  }

  /**
   * Gets the value of the 'footprintWKT' field.
   * http://rs.tdwg.org/dwc/terms/footprintWKT   */
  public java.lang.CharSequence getFootprintWKT() {
    return footprintWKT;
  }

  /**
   * Sets the value of the 'footprintWKT' field.
   * http://rs.tdwg.org/dwc/terms/footprintWKT   * @param value the value to set.
   */
  public void setFootprintWKT(java.lang.CharSequence value) {
    this.footprintWKT = value;
  }

  /**
   * Gets the value of the 'footprintSRS' field.
   * http://rs.tdwg.org/dwc/terms/footprintSRS   */
  public java.lang.CharSequence getFootprintSRS() {
    return footprintSRS;
  }

  /**
   * Sets the value of the 'footprintSRS' field.
   * http://rs.tdwg.org/dwc/terms/footprintSRS   * @param value the value to set.
   */
  public void setFootprintSRS(java.lang.CharSequence value) {
    this.footprintSRS = value;
  }

  /**
   * Gets the value of the 'footprintSpatialFit' field.
   * http://rs.tdwg.org/dwc/terms/footprintSpatialFit   */
  public java.lang.CharSequence getFootprintSpatialFit() {
    return footprintSpatialFit;
  }

  /**
   * Sets the value of the 'footprintSpatialFit' field.
   * http://rs.tdwg.org/dwc/terms/footprintSpatialFit   * @param value the value to set.
   */
  public void setFootprintSpatialFit(java.lang.CharSequence value) {
    this.footprintSpatialFit = value;
  }

  /**
   * Gets the value of the 'georeferencedBy' field.
   * http://rs.tdwg.org/dwc/terms/georeferencedBy   */
  public java.lang.CharSequence getGeoreferencedBy() {
    return georeferencedBy;
  }

  /**
   * Sets the value of the 'georeferencedBy' field.
   * http://rs.tdwg.org/dwc/terms/georeferencedBy   * @param value the value to set.
   */
  public void setGeoreferencedBy(java.lang.CharSequence value) {
    this.georeferencedBy = value;
  }

  /**
   * Gets the value of the 'georeferencedDate' field.
   * http://rs.tdwg.org/dwc/terms/georeferencedDate   */
  public java.lang.CharSequence getGeoreferencedDate() {
    return georeferencedDate;
  }

  /**
   * Sets the value of the 'georeferencedDate' field.
   * http://rs.tdwg.org/dwc/terms/georeferencedDate   * @param value the value to set.
   */
  public void setGeoreferencedDate(java.lang.CharSequence value) {
    this.georeferencedDate = value;
  }

  /**
   * Gets the value of the 'georeferenceProtocol' field.
   * http://rs.tdwg.org/dwc/terms/georeferenceProtocol   */
  public java.lang.CharSequence getGeoreferenceProtocol() {
    return georeferenceProtocol;
  }

  /**
   * Sets the value of the 'georeferenceProtocol' field.
   * http://rs.tdwg.org/dwc/terms/georeferenceProtocol   * @param value the value to set.
   */
  public void setGeoreferenceProtocol(java.lang.CharSequence value) {
    this.georeferenceProtocol = value;
  }

  /**
   * Gets the value of the 'georeferenceSources' field.
   * http://rs.tdwg.org/dwc/terms/georeferenceSources   */
  public java.lang.CharSequence getGeoreferenceSources() {
    return georeferenceSources;
  }

  /**
   * Sets the value of the 'georeferenceSources' field.
   * http://rs.tdwg.org/dwc/terms/georeferenceSources   * @param value the value to set.
   */
  public void setGeoreferenceSources(java.lang.CharSequence value) {
    this.georeferenceSources = value;
  }

  /**
   * Gets the value of the 'georeferenceVerificationStatus' field.
   * http://rs.tdwg.org/dwc/terms/georeferenceVerificationStatus   */
  public java.lang.CharSequence getGeoreferenceVerificationStatus() {
    return georeferenceVerificationStatus;
  }

  /**
   * Sets the value of the 'georeferenceVerificationStatus' field.
   * http://rs.tdwg.org/dwc/terms/georeferenceVerificationStatus   * @param value the value to set.
   */
  public void setGeoreferenceVerificationStatus(java.lang.CharSequence value) {
    this.georeferenceVerificationStatus = value;
  }

  /**
   * Gets the value of the 'georeferenceRemarks' field.
   * http://rs.tdwg.org/dwc/terms/georeferenceRemarks   */
  public java.lang.CharSequence getGeoreferenceRemarks() {
    return georeferenceRemarks;
  }

  /**
   * Sets the value of the 'georeferenceRemarks' field.
   * http://rs.tdwg.org/dwc/terms/georeferenceRemarks   * @param value the value to set.
   */
  public void setGeoreferenceRemarks(java.lang.CharSequence value) {
    this.georeferenceRemarks = value;
  }

  /**
   * Gets the value of the 'dcterms_type' field.
   * http://purl.org/dc/terms/type   */
  public java.lang.CharSequence getDctermsType() {
    return dcterms_type;
  }

  /**
   * Sets the value of the 'dcterms_type' field.
   * http://purl.org/dc/terms/type   * @param value the value to set.
   */
  public void setDctermsType(java.lang.CharSequence value) {
    this.dcterms_type = value;
  }

  /**
   * Gets the value of the 'dcterms_modified' field.
   * http://purl.org/dc/terms/modified   */
  public java.lang.CharSequence getDctermsModified() {
    return dcterms_modified;
  }

  /**
   * Sets the value of the 'dcterms_modified' field.
   * http://purl.org/dc/terms/modified   * @param value the value to set.
   */
  public void setDctermsModified(java.lang.CharSequence value) {
    this.dcterms_modified = value;
  }

  /**
   * Gets the value of the 'dcterms_language' field.
   * http://purl.org/dc/terms/language   */
  public java.lang.CharSequence getDctermsLanguage() {
    return dcterms_language;
  }

  /**
   * Sets the value of the 'dcterms_language' field.
   * http://purl.org/dc/terms/language   * @param value the value to set.
   */
  public void setDctermsLanguage(java.lang.CharSequence value) {
    this.dcterms_language = value;
  }

  /**
   * Gets the value of the 'dcterms_license' field.
   * http://purl.org/dc/terms/license   */
  public java.lang.CharSequence getDctermsLicense() {
    return dcterms_license;
  }

  /**
   * Sets the value of the 'dcterms_license' field.
   * http://purl.org/dc/terms/license   * @param value the value to set.
   */
  public void setDctermsLicense(java.lang.CharSequence value) {
    this.dcterms_license = value;
  }

  /**
   * Gets the value of the 'dcterms_rightsHolder' field.
   * http://purl.org/dc/terms/rightsHolder   */
  public java.lang.CharSequence getDctermsRightsHolder() {
    return dcterms_rightsHolder;
  }

  /**
   * Sets the value of the 'dcterms_rightsHolder' field.
   * http://purl.org/dc/terms/rightsHolder   * @param value the value to set.
   */
  public void setDctermsRightsHolder(java.lang.CharSequence value) {
    this.dcterms_rightsHolder = value;
  }

  /**
   * Gets the value of the 'dcterms_accessRights' field.
   * http://purl.org/dc/terms/accessRights   */
  public java.lang.CharSequence getDctermsAccessRights() {
    return dcterms_accessRights;
  }

  /**
   * Sets the value of the 'dcterms_accessRights' field.
   * http://purl.org/dc/terms/accessRights   * @param value the value to set.
   */
  public void setDctermsAccessRights(java.lang.CharSequence value) {
    this.dcterms_accessRights = value;
  }

  /**
   * Gets the value of the 'dcterms_bibliographicCitation' field.
   * http://purl.org/dc/terms/bibliographicCitation   */
  public java.lang.CharSequence getDctermsBibliographicCitation() {
    return dcterms_bibliographicCitation;
  }

  /**
   * Sets the value of the 'dcterms_bibliographicCitation' field.
   * http://purl.org/dc/terms/bibliographicCitation   * @param value the value to set.
   */
  public void setDctermsBibliographicCitation(java.lang.CharSequence value) {
    this.dcterms_bibliographicCitation = value;
  }

  /**
   * Gets the value of the 'dcterms_references' field.
   * http://purl.org/dc/terms/references   */
  public java.lang.CharSequence getDctermsReferences() {
    return dcterms_references;
  }

  /**
   * Sets the value of the 'dcterms_references' field.
   * http://purl.org/dc/terms/references   * @param value the value to set.
   */
  public void setDctermsReferences(java.lang.CharSequence value) {
    this.dcterms_references = value;
  }

  /**
   * Gets the value of the 'institutionID' field.
   * http://rs.tdwg.org/dwc/terms/institutionID   */
  public java.lang.CharSequence getInstitutionID() {
    return institutionID;
  }

  /**
   * Sets the value of the 'institutionID' field.
   * http://rs.tdwg.org/dwc/terms/institutionID   * @param value the value to set.
   */
  public void setInstitutionID(java.lang.CharSequence value) {
    this.institutionID = value;
  }

  /**
   * Gets the value of the 'collectionID' field.
   * http://rs.tdwg.org/dwc/terms/collectionID   */
  public java.lang.CharSequence getCollectionID() {
    return collectionID;
  }

  /**
   * Sets the value of the 'collectionID' field.
   * http://rs.tdwg.org/dwc/terms/collectionID   * @param value the value to set.
   */
  public void setCollectionID(java.lang.CharSequence value) {
    this.collectionID = value;
  }

  /**
   * Gets the value of the 'datasetID' field.
   * http://rs.tdwg.org/dwc/terms/datasetID   */
  public java.lang.CharSequence getDatasetID() {
    return datasetID;
  }

  /**
   * Sets the value of the 'datasetID' field.
   * http://rs.tdwg.org/dwc/terms/datasetID   * @param value the value to set.
   */
  public void setDatasetID(java.lang.CharSequence value) {
    this.datasetID = value;
  }

  /**
   * Gets the value of the 'institutionCode' field.
   * http://rs.tdwg.org/dwc/terms/institutionCode   */
  public java.lang.CharSequence getInstitutionCode() {
    return institutionCode;
  }

  /**
   * Sets the value of the 'institutionCode' field.
   * http://rs.tdwg.org/dwc/terms/institutionCode   * @param value the value to set.
   */
  public void setInstitutionCode(java.lang.CharSequence value) {
    this.institutionCode = value;
  }

  /**
   * Gets the value of the 'collectionCode' field.
   * http://rs.tdwg.org/dwc/terms/collectionCode   */
  public java.lang.CharSequence getCollectionCode() {
    return collectionCode;
  }

  /**
   * Sets the value of the 'collectionCode' field.
   * http://rs.tdwg.org/dwc/terms/collectionCode   * @param value the value to set.
   */
  public void setCollectionCode(java.lang.CharSequence value) {
    this.collectionCode = value;
  }

  /**
   * Gets the value of the 'datasetName' field.
   * http://rs.tdwg.org/dwc/terms/datasetName   */
  public java.lang.CharSequence getDatasetName() {
    return datasetName;
  }

  /**
   * Sets the value of the 'datasetName' field.
   * http://rs.tdwg.org/dwc/terms/datasetName   * @param value the value to set.
   */
  public void setDatasetName(java.lang.CharSequence value) {
    this.datasetName = value;
  }

  /**
   * Gets the value of the 'ownerInstitutionCode' field.
   * http://rs.tdwg.org/dwc/terms/ownerInstitutionCode   */
  public java.lang.CharSequence getOwnerInstitutionCode() {
    return ownerInstitutionCode;
  }

  /**
   * Sets the value of the 'ownerInstitutionCode' field.
   * http://rs.tdwg.org/dwc/terms/ownerInstitutionCode   * @param value the value to set.
   */
  public void setOwnerInstitutionCode(java.lang.CharSequence value) {
    this.ownerInstitutionCode = value;
  }

  /**
   * Gets the value of the 'basisOfRecord' field.
   * http://rs.tdwg.org/dwc/terms/basisOfRecord   */
  public java.lang.CharSequence getBasisOfRecord() {
    return basisOfRecord;
  }

  /**
   * Sets the value of the 'basisOfRecord' field.
   * http://rs.tdwg.org/dwc/terms/basisOfRecord   * @param value the value to set.
   */
  public void setBasisOfRecord(java.lang.CharSequence value) {
    this.basisOfRecord = value;
  }

  /**
   * Gets the value of the 'informationWithheld' field.
   * http://rs.tdwg.org/dwc/terms/informationWithheld   */
  public java.lang.CharSequence getInformationWithheld() {
    return informationWithheld;
  }

  /**
   * Sets the value of the 'informationWithheld' field.
   * http://rs.tdwg.org/dwc/terms/informationWithheld   * @param value the value to set.
   */
  public void setInformationWithheld(java.lang.CharSequence value) {
    this.informationWithheld = value;
  }

  /**
   * Gets the value of the 'dataGeneralizations' field.
   * http://rs.tdwg.org/dwc/terms/dataGeneralizations   */
  public java.lang.CharSequence getDataGeneralizations() {
    return dataGeneralizations;
  }

  /**
   * Sets the value of the 'dataGeneralizations' field.
   * http://rs.tdwg.org/dwc/terms/dataGeneralizations   * @param value the value to set.
   */
  public void setDataGeneralizations(java.lang.CharSequence value) {
    this.dataGeneralizations = value;
  }

  /**
   * Gets the value of the 'dynamicProperties' field.
   * http://rs.tdwg.org/dwc/terms/dynamicProperties   */
  public java.lang.CharSequence getDynamicProperties() {
    return dynamicProperties;
  }

  /**
   * Sets the value of the 'dynamicProperties' field.
   * http://rs.tdwg.org/dwc/terms/dynamicProperties   * @param value the value to set.
   */
  public void setDynamicProperties(java.lang.CharSequence value) {
    this.dynamicProperties = value;
  }

  /** Creates a new Location RecordBuilder */
  public static org.gbif.dwca.avro.Location.Builder newBuilder() {
    return new org.gbif.dwca.avro.Location.Builder();
  }
  
  /** Creates a new Location RecordBuilder by copying an existing Builder */
  public static org.gbif.dwca.avro.Location.Builder newBuilder(org.gbif.dwca.avro.Location.Builder other) {
    return new org.gbif.dwca.avro.Location.Builder(other);
  }
  
  /** Creates a new Location RecordBuilder by copying an existing Location instance */
  public static org.gbif.dwca.avro.Location.Builder newBuilder(org.gbif.dwca.avro.Location other) {
    return new org.gbif.dwca.avro.Location.Builder(other);
  }
  
  /**
   * RecordBuilder for Location instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Location>
    implements org.apache.avro.data.RecordBuilder<Location> {

    private java.lang.CharSequence occurrenceID;
    private java.lang.CharSequence locationID;
    private java.lang.CharSequence higherGeographyID;
    private java.lang.CharSequence higherGeography;
    private java.lang.CharSequence continent;
    private java.lang.CharSequence waterBody;
    private java.lang.CharSequence islandGroup;
    private java.lang.CharSequence island;
    private java.lang.CharSequence country;
    private java.lang.CharSequence countryCode;
    private java.lang.CharSequence stateProvince;
    private java.lang.CharSequence county;
    private java.lang.CharSequence municipality;
    private java.lang.CharSequence locality;
    private java.lang.CharSequence verbatimLocality;
    private java.lang.CharSequence minimumElevationInMeters;
    private java.lang.CharSequence maximumElevationInMeters;
    private java.lang.CharSequence verbatimElevation;
    private java.lang.CharSequence minimumDepthInMeters;
    private java.lang.CharSequence maximumDepthInMeters;
    private java.lang.CharSequence verbatimDepth;
    private java.lang.CharSequence minimumDistanceAboveSurfaceInMeters;
    private java.lang.CharSequence maximumDistanceAboveSurfaceInMeters;
    private java.lang.CharSequence locationAccordingTo;
    private java.lang.CharSequence locationRemarks;
    private java.lang.CharSequence decimalLatitude;
    private java.lang.CharSequence decimalLongitude;
    private java.lang.CharSequence geodeticDatum;
    private java.lang.CharSequence coordinateUncertaintyInMeters;
    private java.lang.CharSequence coordinatePrecision;
    private java.lang.CharSequence pointRadiusSpatialFit;
    private java.lang.CharSequence verbatimCoordinates;
    private java.lang.CharSequence verbatimLatitude;
    private java.lang.CharSequence verbatimLongitude;
    private java.lang.CharSequence verbatimCoordinateSystem;
    private java.lang.CharSequence verbatimSRS;
    private java.lang.CharSequence footprintWKT;
    private java.lang.CharSequence footprintSRS;
    private java.lang.CharSequence footprintSpatialFit;
    private java.lang.CharSequence georeferencedBy;
    private java.lang.CharSequence georeferencedDate;
    private java.lang.CharSequence georeferenceProtocol;
    private java.lang.CharSequence georeferenceSources;
    private java.lang.CharSequence georeferenceVerificationStatus;
    private java.lang.CharSequence georeferenceRemarks;
    private java.lang.CharSequence dcterms_type;
    private java.lang.CharSequence dcterms_modified;
    private java.lang.CharSequence dcterms_language;
    private java.lang.CharSequence dcterms_license;
    private java.lang.CharSequence dcterms_rightsHolder;
    private java.lang.CharSequence dcterms_accessRights;
    private java.lang.CharSequence dcterms_bibliographicCitation;
    private java.lang.CharSequence dcterms_references;
    private java.lang.CharSequence institutionID;
    private java.lang.CharSequence collectionID;
    private java.lang.CharSequence datasetID;
    private java.lang.CharSequence institutionCode;
    private java.lang.CharSequence collectionCode;
    private java.lang.CharSequence datasetName;
    private java.lang.CharSequence ownerInstitutionCode;
    private java.lang.CharSequence basisOfRecord;
    private java.lang.CharSequence informationWithheld;
    private java.lang.CharSequence dataGeneralizations;
    private java.lang.CharSequence dynamicProperties;

    /** Creates a new Builder */
    private Builder() {
      super(org.gbif.dwca.avro.Location.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.gbif.dwca.avro.Location.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.occurrenceID)) {
        this.occurrenceID = data().deepCopy(fields()[0].schema(), other.occurrenceID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.locationID)) {
        this.locationID = data().deepCopy(fields()[1].schema(), other.locationID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.higherGeographyID)) {
        this.higherGeographyID = data().deepCopy(fields()[2].schema(), other.higherGeographyID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.higherGeography)) {
        this.higherGeography = data().deepCopy(fields()[3].schema(), other.higherGeography);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.continent)) {
        this.continent = data().deepCopy(fields()[4].schema(), other.continent);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.waterBody)) {
        this.waterBody = data().deepCopy(fields()[5].schema(), other.waterBody);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.islandGroup)) {
        this.islandGroup = data().deepCopy(fields()[6].schema(), other.islandGroup);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.island)) {
        this.island = data().deepCopy(fields()[7].schema(), other.island);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.country)) {
        this.country = data().deepCopy(fields()[8].schema(), other.country);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[9].schema(), other.countryCode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.stateProvince)) {
        this.stateProvince = data().deepCopy(fields()[10].schema(), other.stateProvince);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.county)) {
        this.county = data().deepCopy(fields()[11].schema(), other.county);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.municipality)) {
        this.municipality = data().deepCopy(fields()[12].schema(), other.municipality);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.locality)) {
        this.locality = data().deepCopy(fields()[13].schema(), other.locality);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.verbatimLocality)) {
        this.verbatimLocality = data().deepCopy(fields()[14].schema(), other.verbatimLocality);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.minimumElevationInMeters)) {
        this.minimumElevationInMeters = data().deepCopy(fields()[15].schema(), other.minimumElevationInMeters);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.maximumElevationInMeters)) {
        this.maximumElevationInMeters = data().deepCopy(fields()[16].schema(), other.maximumElevationInMeters);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.verbatimElevation)) {
        this.verbatimElevation = data().deepCopy(fields()[17].schema(), other.verbatimElevation);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.minimumDepthInMeters)) {
        this.minimumDepthInMeters = data().deepCopy(fields()[18].schema(), other.minimumDepthInMeters);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.maximumDepthInMeters)) {
        this.maximumDepthInMeters = data().deepCopy(fields()[19].schema(), other.maximumDepthInMeters);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.verbatimDepth)) {
        this.verbatimDepth = data().deepCopy(fields()[20].schema(), other.verbatimDepth);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.minimumDistanceAboveSurfaceInMeters)) {
        this.minimumDistanceAboveSurfaceInMeters = data().deepCopy(fields()[21].schema(), other.minimumDistanceAboveSurfaceInMeters);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.maximumDistanceAboveSurfaceInMeters)) {
        this.maximumDistanceAboveSurfaceInMeters = data().deepCopy(fields()[22].schema(), other.maximumDistanceAboveSurfaceInMeters);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.locationAccordingTo)) {
        this.locationAccordingTo = data().deepCopy(fields()[23].schema(), other.locationAccordingTo);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.locationRemarks)) {
        this.locationRemarks = data().deepCopy(fields()[24].schema(), other.locationRemarks);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.decimalLatitude)) {
        this.decimalLatitude = data().deepCopy(fields()[25].schema(), other.decimalLatitude);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.decimalLongitude)) {
        this.decimalLongitude = data().deepCopy(fields()[26].schema(), other.decimalLongitude);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.geodeticDatum)) {
        this.geodeticDatum = data().deepCopy(fields()[27].schema(), other.geodeticDatum);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.coordinateUncertaintyInMeters)) {
        this.coordinateUncertaintyInMeters = data().deepCopy(fields()[28].schema(), other.coordinateUncertaintyInMeters);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.coordinatePrecision)) {
        this.coordinatePrecision = data().deepCopy(fields()[29].schema(), other.coordinatePrecision);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.pointRadiusSpatialFit)) {
        this.pointRadiusSpatialFit = data().deepCopy(fields()[30].schema(), other.pointRadiusSpatialFit);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.verbatimCoordinates)) {
        this.verbatimCoordinates = data().deepCopy(fields()[31].schema(), other.verbatimCoordinates);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.verbatimLatitude)) {
        this.verbatimLatitude = data().deepCopy(fields()[32].schema(), other.verbatimLatitude);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.verbatimLongitude)) {
        this.verbatimLongitude = data().deepCopy(fields()[33].schema(), other.verbatimLongitude);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.verbatimCoordinateSystem)) {
        this.verbatimCoordinateSystem = data().deepCopy(fields()[34].schema(), other.verbatimCoordinateSystem);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.verbatimSRS)) {
        this.verbatimSRS = data().deepCopy(fields()[35].schema(), other.verbatimSRS);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.footprintWKT)) {
        this.footprintWKT = data().deepCopy(fields()[36].schema(), other.footprintWKT);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.footprintSRS)) {
        this.footprintSRS = data().deepCopy(fields()[37].schema(), other.footprintSRS);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.footprintSpatialFit)) {
        this.footprintSpatialFit = data().deepCopy(fields()[38].schema(), other.footprintSpatialFit);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.georeferencedBy)) {
        this.georeferencedBy = data().deepCopy(fields()[39].schema(), other.georeferencedBy);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.georeferencedDate)) {
        this.georeferencedDate = data().deepCopy(fields()[40].schema(), other.georeferencedDate);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.georeferenceProtocol)) {
        this.georeferenceProtocol = data().deepCopy(fields()[41].schema(), other.georeferenceProtocol);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.georeferenceSources)) {
        this.georeferenceSources = data().deepCopy(fields()[42].schema(), other.georeferenceSources);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.georeferenceVerificationStatus)) {
        this.georeferenceVerificationStatus = data().deepCopy(fields()[43].schema(), other.georeferenceVerificationStatus);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.georeferenceRemarks)) {
        this.georeferenceRemarks = data().deepCopy(fields()[44].schema(), other.georeferenceRemarks);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.dcterms_type)) {
        this.dcterms_type = data().deepCopy(fields()[45].schema(), other.dcterms_type);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.dcterms_modified)) {
        this.dcterms_modified = data().deepCopy(fields()[46].schema(), other.dcterms_modified);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.dcterms_language)) {
        this.dcterms_language = data().deepCopy(fields()[47].schema(), other.dcterms_language);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.dcterms_license)) {
        this.dcterms_license = data().deepCopy(fields()[48].schema(), other.dcterms_license);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.dcterms_rightsHolder)) {
        this.dcterms_rightsHolder = data().deepCopy(fields()[49].schema(), other.dcterms_rightsHolder);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.dcterms_accessRights)) {
        this.dcterms_accessRights = data().deepCopy(fields()[50].schema(), other.dcterms_accessRights);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.dcterms_bibliographicCitation)) {
        this.dcterms_bibliographicCitation = data().deepCopy(fields()[51].schema(), other.dcterms_bibliographicCitation);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.dcterms_references)) {
        this.dcterms_references = data().deepCopy(fields()[52].schema(), other.dcterms_references);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.institutionID)) {
        this.institutionID = data().deepCopy(fields()[53].schema(), other.institutionID);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.collectionID)) {
        this.collectionID = data().deepCopy(fields()[54].schema(), other.collectionID);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.datasetID)) {
        this.datasetID = data().deepCopy(fields()[55].schema(), other.datasetID);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.institutionCode)) {
        this.institutionCode = data().deepCopy(fields()[56].schema(), other.institutionCode);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.collectionCode)) {
        this.collectionCode = data().deepCopy(fields()[57].schema(), other.collectionCode);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.datasetName)) {
        this.datasetName = data().deepCopy(fields()[58].schema(), other.datasetName);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.ownerInstitutionCode)) {
        this.ownerInstitutionCode = data().deepCopy(fields()[59].schema(), other.ownerInstitutionCode);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.basisOfRecord)) {
        this.basisOfRecord = data().deepCopy(fields()[60].schema(), other.basisOfRecord);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.informationWithheld)) {
        this.informationWithheld = data().deepCopy(fields()[61].schema(), other.informationWithheld);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.dataGeneralizations)) {
        this.dataGeneralizations = data().deepCopy(fields()[62].schema(), other.dataGeneralizations);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other.dynamicProperties)) {
        this.dynamicProperties = data().deepCopy(fields()[63].schema(), other.dynamicProperties);
        fieldSetFlags()[63] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Location instance */
    private Builder(org.gbif.dwca.avro.Location other) {
            super(org.gbif.dwca.avro.Location.SCHEMA$);
      if (isValidValue(fields()[0], other.occurrenceID)) {
        this.occurrenceID = data().deepCopy(fields()[0].schema(), other.occurrenceID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.locationID)) {
        this.locationID = data().deepCopy(fields()[1].schema(), other.locationID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.higherGeographyID)) {
        this.higherGeographyID = data().deepCopy(fields()[2].schema(), other.higherGeographyID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.higherGeography)) {
        this.higherGeography = data().deepCopy(fields()[3].schema(), other.higherGeography);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.continent)) {
        this.continent = data().deepCopy(fields()[4].schema(), other.continent);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.waterBody)) {
        this.waterBody = data().deepCopy(fields()[5].schema(), other.waterBody);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.islandGroup)) {
        this.islandGroup = data().deepCopy(fields()[6].schema(), other.islandGroup);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.island)) {
        this.island = data().deepCopy(fields()[7].schema(), other.island);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.country)) {
        this.country = data().deepCopy(fields()[8].schema(), other.country);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[9].schema(), other.countryCode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.stateProvince)) {
        this.stateProvince = data().deepCopy(fields()[10].schema(), other.stateProvince);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.county)) {
        this.county = data().deepCopy(fields()[11].schema(), other.county);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.municipality)) {
        this.municipality = data().deepCopy(fields()[12].schema(), other.municipality);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.locality)) {
        this.locality = data().deepCopy(fields()[13].schema(), other.locality);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.verbatimLocality)) {
        this.verbatimLocality = data().deepCopy(fields()[14].schema(), other.verbatimLocality);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.minimumElevationInMeters)) {
        this.minimumElevationInMeters = data().deepCopy(fields()[15].schema(), other.minimumElevationInMeters);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.maximumElevationInMeters)) {
        this.maximumElevationInMeters = data().deepCopy(fields()[16].schema(), other.maximumElevationInMeters);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.verbatimElevation)) {
        this.verbatimElevation = data().deepCopy(fields()[17].schema(), other.verbatimElevation);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.minimumDepthInMeters)) {
        this.minimumDepthInMeters = data().deepCopy(fields()[18].schema(), other.minimumDepthInMeters);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.maximumDepthInMeters)) {
        this.maximumDepthInMeters = data().deepCopy(fields()[19].schema(), other.maximumDepthInMeters);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.verbatimDepth)) {
        this.verbatimDepth = data().deepCopy(fields()[20].schema(), other.verbatimDepth);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.minimumDistanceAboveSurfaceInMeters)) {
        this.minimumDistanceAboveSurfaceInMeters = data().deepCopy(fields()[21].schema(), other.minimumDistanceAboveSurfaceInMeters);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.maximumDistanceAboveSurfaceInMeters)) {
        this.maximumDistanceAboveSurfaceInMeters = data().deepCopy(fields()[22].schema(), other.maximumDistanceAboveSurfaceInMeters);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.locationAccordingTo)) {
        this.locationAccordingTo = data().deepCopy(fields()[23].schema(), other.locationAccordingTo);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.locationRemarks)) {
        this.locationRemarks = data().deepCopy(fields()[24].schema(), other.locationRemarks);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.decimalLatitude)) {
        this.decimalLatitude = data().deepCopy(fields()[25].schema(), other.decimalLatitude);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.decimalLongitude)) {
        this.decimalLongitude = data().deepCopy(fields()[26].schema(), other.decimalLongitude);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.geodeticDatum)) {
        this.geodeticDatum = data().deepCopy(fields()[27].schema(), other.geodeticDatum);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.coordinateUncertaintyInMeters)) {
        this.coordinateUncertaintyInMeters = data().deepCopy(fields()[28].schema(), other.coordinateUncertaintyInMeters);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.coordinatePrecision)) {
        this.coordinatePrecision = data().deepCopy(fields()[29].schema(), other.coordinatePrecision);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.pointRadiusSpatialFit)) {
        this.pointRadiusSpatialFit = data().deepCopy(fields()[30].schema(), other.pointRadiusSpatialFit);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.verbatimCoordinates)) {
        this.verbatimCoordinates = data().deepCopy(fields()[31].schema(), other.verbatimCoordinates);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.verbatimLatitude)) {
        this.verbatimLatitude = data().deepCopy(fields()[32].schema(), other.verbatimLatitude);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.verbatimLongitude)) {
        this.verbatimLongitude = data().deepCopy(fields()[33].schema(), other.verbatimLongitude);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.verbatimCoordinateSystem)) {
        this.verbatimCoordinateSystem = data().deepCopy(fields()[34].schema(), other.verbatimCoordinateSystem);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.verbatimSRS)) {
        this.verbatimSRS = data().deepCopy(fields()[35].schema(), other.verbatimSRS);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.footprintWKT)) {
        this.footprintWKT = data().deepCopy(fields()[36].schema(), other.footprintWKT);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.footprintSRS)) {
        this.footprintSRS = data().deepCopy(fields()[37].schema(), other.footprintSRS);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.footprintSpatialFit)) {
        this.footprintSpatialFit = data().deepCopy(fields()[38].schema(), other.footprintSpatialFit);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.georeferencedBy)) {
        this.georeferencedBy = data().deepCopy(fields()[39].schema(), other.georeferencedBy);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.georeferencedDate)) {
        this.georeferencedDate = data().deepCopy(fields()[40].schema(), other.georeferencedDate);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.georeferenceProtocol)) {
        this.georeferenceProtocol = data().deepCopy(fields()[41].schema(), other.georeferenceProtocol);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.georeferenceSources)) {
        this.georeferenceSources = data().deepCopy(fields()[42].schema(), other.georeferenceSources);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.georeferenceVerificationStatus)) {
        this.georeferenceVerificationStatus = data().deepCopy(fields()[43].schema(), other.georeferenceVerificationStatus);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.georeferenceRemarks)) {
        this.georeferenceRemarks = data().deepCopy(fields()[44].schema(), other.georeferenceRemarks);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.dcterms_type)) {
        this.dcterms_type = data().deepCopy(fields()[45].schema(), other.dcterms_type);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.dcterms_modified)) {
        this.dcterms_modified = data().deepCopy(fields()[46].schema(), other.dcterms_modified);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.dcterms_language)) {
        this.dcterms_language = data().deepCopy(fields()[47].schema(), other.dcterms_language);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.dcterms_license)) {
        this.dcterms_license = data().deepCopy(fields()[48].schema(), other.dcterms_license);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.dcterms_rightsHolder)) {
        this.dcterms_rightsHolder = data().deepCopy(fields()[49].schema(), other.dcterms_rightsHolder);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.dcterms_accessRights)) {
        this.dcterms_accessRights = data().deepCopy(fields()[50].schema(), other.dcterms_accessRights);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.dcterms_bibliographicCitation)) {
        this.dcterms_bibliographicCitation = data().deepCopy(fields()[51].schema(), other.dcterms_bibliographicCitation);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.dcterms_references)) {
        this.dcterms_references = data().deepCopy(fields()[52].schema(), other.dcterms_references);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.institutionID)) {
        this.institutionID = data().deepCopy(fields()[53].schema(), other.institutionID);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.collectionID)) {
        this.collectionID = data().deepCopy(fields()[54].schema(), other.collectionID);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.datasetID)) {
        this.datasetID = data().deepCopy(fields()[55].schema(), other.datasetID);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.institutionCode)) {
        this.institutionCode = data().deepCopy(fields()[56].schema(), other.institutionCode);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.collectionCode)) {
        this.collectionCode = data().deepCopy(fields()[57].schema(), other.collectionCode);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.datasetName)) {
        this.datasetName = data().deepCopy(fields()[58].schema(), other.datasetName);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.ownerInstitutionCode)) {
        this.ownerInstitutionCode = data().deepCopy(fields()[59].schema(), other.ownerInstitutionCode);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.basisOfRecord)) {
        this.basisOfRecord = data().deepCopy(fields()[60].schema(), other.basisOfRecord);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.informationWithheld)) {
        this.informationWithheld = data().deepCopy(fields()[61].schema(), other.informationWithheld);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.dataGeneralizations)) {
        this.dataGeneralizations = data().deepCopy(fields()[62].schema(), other.dataGeneralizations);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other.dynamicProperties)) {
        this.dynamicProperties = data().deepCopy(fields()[63].schema(), other.dynamicProperties);
        fieldSetFlags()[63] = true;
      }
    }

    /** Gets the value of the 'occurrenceID' field */
    public java.lang.CharSequence getOccurrenceID() {
      return occurrenceID;
    }
    
    /** Sets the value of the 'occurrenceID' field */
    public org.gbif.dwca.avro.Location.Builder setOccurrenceID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.occurrenceID = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'occurrenceID' field has been set */
    public boolean hasOccurrenceID() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'occurrenceID' field */
    public org.gbif.dwca.avro.Location.Builder clearOccurrenceID() {
      occurrenceID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'locationID' field */
    public java.lang.CharSequence getLocationID() {
      return locationID;
    }
    
    /** Sets the value of the 'locationID' field */
    public org.gbif.dwca.avro.Location.Builder setLocationID(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.locationID = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'locationID' field has been set */
    public boolean hasLocationID() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'locationID' field */
    public org.gbif.dwca.avro.Location.Builder clearLocationID() {
      locationID = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'higherGeographyID' field */
    public java.lang.CharSequence getHigherGeographyID() {
      return higherGeographyID;
    }
    
    /** Sets the value of the 'higherGeographyID' field */
    public org.gbif.dwca.avro.Location.Builder setHigherGeographyID(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.higherGeographyID = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'higherGeographyID' field has been set */
    public boolean hasHigherGeographyID() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'higherGeographyID' field */
    public org.gbif.dwca.avro.Location.Builder clearHigherGeographyID() {
      higherGeographyID = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'higherGeography' field */
    public java.lang.CharSequence getHigherGeography() {
      return higherGeography;
    }
    
    /** Sets the value of the 'higherGeography' field */
    public org.gbif.dwca.avro.Location.Builder setHigherGeography(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.higherGeography = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'higherGeography' field has been set */
    public boolean hasHigherGeography() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'higherGeography' field */
    public org.gbif.dwca.avro.Location.Builder clearHigherGeography() {
      higherGeography = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'continent' field */
    public java.lang.CharSequence getContinent() {
      return continent;
    }
    
    /** Sets the value of the 'continent' field */
    public org.gbif.dwca.avro.Location.Builder setContinent(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.continent = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'continent' field has been set */
    public boolean hasContinent() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'continent' field */
    public org.gbif.dwca.avro.Location.Builder clearContinent() {
      continent = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'waterBody' field */
    public java.lang.CharSequence getWaterBody() {
      return waterBody;
    }
    
    /** Sets the value of the 'waterBody' field */
    public org.gbif.dwca.avro.Location.Builder setWaterBody(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.waterBody = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'waterBody' field has been set */
    public boolean hasWaterBody() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'waterBody' field */
    public org.gbif.dwca.avro.Location.Builder clearWaterBody() {
      waterBody = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'islandGroup' field */
    public java.lang.CharSequence getIslandGroup() {
      return islandGroup;
    }
    
    /** Sets the value of the 'islandGroup' field */
    public org.gbif.dwca.avro.Location.Builder setIslandGroup(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.islandGroup = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'islandGroup' field has been set */
    public boolean hasIslandGroup() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'islandGroup' field */
    public org.gbif.dwca.avro.Location.Builder clearIslandGroup() {
      islandGroup = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'island' field */
    public java.lang.CharSequence getIsland() {
      return island;
    }
    
    /** Sets the value of the 'island' field */
    public org.gbif.dwca.avro.Location.Builder setIsland(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.island = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'island' field has been set */
    public boolean hasIsland() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'island' field */
    public org.gbif.dwca.avro.Location.Builder clearIsland() {
      island = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'country' field */
    public java.lang.CharSequence getCountry() {
      return country;
    }
    
    /** Sets the value of the 'country' field */
    public org.gbif.dwca.avro.Location.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.country = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'country' field has been set */
    public boolean hasCountry() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'country' field */
    public org.gbif.dwca.avro.Location.Builder clearCountry() {
      country = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'countryCode' field */
    public java.lang.CharSequence getCountryCode() {
      return countryCode;
    }
    
    /** Sets the value of the 'countryCode' field */
    public org.gbif.dwca.avro.Location.Builder setCountryCode(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.countryCode = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'countryCode' field has been set */
    public boolean hasCountryCode() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'countryCode' field */
    public org.gbif.dwca.avro.Location.Builder clearCountryCode() {
      countryCode = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'stateProvince' field */
    public java.lang.CharSequence getStateProvince() {
      return stateProvince;
    }
    
    /** Sets the value of the 'stateProvince' field */
    public org.gbif.dwca.avro.Location.Builder setStateProvince(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.stateProvince = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'stateProvince' field has been set */
    public boolean hasStateProvince() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'stateProvince' field */
    public org.gbif.dwca.avro.Location.Builder clearStateProvince() {
      stateProvince = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'county' field */
    public java.lang.CharSequence getCounty() {
      return county;
    }
    
    /** Sets the value of the 'county' field */
    public org.gbif.dwca.avro.Location.Builder setCounty(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.county = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'county' field has been set */
    public boolean hasCounty() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'county' field */
    public org.gbif.dwca.avro.Location.Builder clearCounty() {
      county = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'municipality' field */
    public java.lang.CharSequence getMunicipality() {
      return municipality;
    }
    
    /** Sets the value of the 'municipality' field */
    public org.gbif.dwca.avro.Location.Builder setMunicipality(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.municipality = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'municipality' field has been set */
    public boolean hasMunicipality() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'municipality' field */
    public org.gbif.dwca.avro.Location.Builder clearMunicipality() {
      municipality = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'locality' field */
    public java.lang.CharSequence getLocality() {
      return locality;
    }
    
    /** Sets the value of the 'locality' field */
    public org.gbif.dwca.avro.Location.Builder setLocality(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.locality = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'locality' field has been set */
    public boolean hasLocality() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'locality' field */
    public org.gbif.dwca.avro.Location.Builder clearLocality() {
      locality = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'verbatimLocality' field */
    public java.lang.CharSequence getVerbatimLocality() {
      return verbatimLocality;
    }
    
    /** Sets the value of the 'verbatimLocality' field */
    public org.gbif.dwca.avro.Location.Builder setVerbatimLocality(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.verbatimLocality = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'verbatimLocality' field has been set */
    public boolean hasVerbatimLocality() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'verbatimLocality' field */
    public org.gbif.dwca.avro.Location.Builder clearVerbatimLocality() {
      verbatimLocality = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'minimumElevationInMeters' field */
    public java.lang.CharSequence getMinimumElevationInMeters() {
      return minimumElevationInMeters;
    }
    
    /** Sets the value of the 'minimumElevationInMeters' field */
    public org.gbif.dwca.avro.Location.Builder setMinimumElevationInMeters(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.minimumElevationInMeters = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'minimumElevationInMeters' field has been set */
    public boolean hasMinimumElevationInMeters() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'minimumElevationInMeters' field */
    public org.gbif.dwca.avro.Location.Builder clearMinimumElevationInMeters() {
      minimumElevationInMeters = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'maximumElevationInMeters' field */
    public java.lang.CharSequence getMaximumElevationInMeters() {
      return maximumElevationInMeters;
    }
    
    /** Sets the value of the 'maximumElevationInMeters' field */
    public org.gbif.dwca.avro.Location.Builder setMaximumElevationInMeters(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.maximumElevationInMeters = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'maximumElevationInMeters' field has been set */
    public boolean hasMaximumElevationInMeters() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'maximumElevationInMeters' field */
    public org.gbif.dwca.avro.Location.Builder clearMaximumElevationInMeters() {
      maximumElevationInMeters = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'verbatimElevation' field */
    public java.lang.CharSequence getVerbatimElevation() {
      return verbatimElevation;
    }
    
    /** Sets the value of the 'verbatimElevation' field */
    public org.gbif.dwca.avro.Location.Builder setVerbatimElevation(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.verbatimElevation = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'verbatimElevation' field has been set */
    public boolean hasVerbatimElevation() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'verbatimElevation' field */
    public org.gbif.dwca.avro.Location.Builder clearVerbatimElevation() {
      verbatimElevation = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'minimumDepthInMeters' field */
    public java.lang.CharSequence getMinimumDepthInMeters() {
      return minimumDepthInMeters;
    }
    
    /** Sets the value of the 'minimumDepthInMeters' field */
    public org.gbif.dwca.avro.Location.Builder setMinimumDepthInMeters(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.minimumDepthInMeters = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'minimumDepthInMeters' field has been set */
    public boolean hasMinimumDepthInMeters() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'minimumDepthInMeters' field */
    public org.gbif.dwca.avro.Location.Builder clearMinimumDepthInMeters() {
      minimumDepthInMeters = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'maximumDepthInMeters' field */
    public java.lang.CharSequence getMaximumDepthInMeters() {
      return maximumDepthInMeters;
    }
    
    /** Sets the value of the 'maximumDepthInMeters' field */
    public org.gbif.dwca.avro.Location.Builder setMaximumDepthInMeters(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.maximumDepthInMeters = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'maximumDepthInMeters' field has been set */
    public boolean hasMaximumDepthInMeters() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'maximumDepthInMeters' field */
    public org.gbif.dwca.avro.Location.Builder clearMaximumDepthInMeters() {
      maximumDepthInMeters = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'verbatimDepth' field */
    public java.lang.CharSequence getVerbatimDepth() {
      return verbatimDepth;
    }
    
    /** Sets the value of the 'verbatimDepth' field */
    public org.gbif.dwca.avro.Location.Builder setVerbatimDepth(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.verbatimDepth = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'verbatimDepth' field has been set */
    public boolean hasVerbatimDepth() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'verbatimDepth' field */
    public org.gbif.dwca.avro.Location.Builder clearVerbatimDepth() {
      verbatimDepth = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'minimumDistanceAboveSurfaceInMeters' field */
    public java.lang.CharSequence getMinimumDistanceAboveSurfaceInMeters() {
      return minimumDistanceAboveSurfaceInMeters;
    }
    
    /** Sets the value of the 'minimumDistanceAboveSurfaceInMeters' field */
    public org.gbif.dwca.avro.Location.Builder setMinimumDistanceAboveSurfaceInMeters(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.minimumDistanceAboveSurfaceInMeters = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the 'minimumDistanceAboveSurfaceInMeters' field has been set */
    public boolean hasMinimumDistanceAboveSurfaceInMeters() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the 'minimumDistanceAboveSurfaceInMeters' field */
    public org.gbif.dwca.avro.Location.Builder clearMinimumDistanceAboveSurfaceInMeters() {
      minimumDistanceAboveSurfaceInMeters = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'maximumDistanceAboveSurfaceInMeters' field */
    public java.lang.CharSequence getMaximumDistanceAboveSurfaceInMeters() {
      return maximumDistanceAboveSurfaceInMeters;
    }
    
    /** Sets the value of the 'maximumDistanceAboveSurfaceInMeters' field */
    public org.gbif.dwca.avro.Location.Builder setMaximumDistanceAboveSurfaceInMeters(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.maximumDistanceAboveSurfaceInMeters = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the 'maximumDistanceAboveSurfaceInMeters' field has been set */
    public boolean hasMaximumDistanceAboveSurfaceInMeters() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the 'maximumDistanceAboveSurfaceInMeters' field */
    public org.gbif.dwca.avro.Location.Builder clearMaximumDistanceAboveSurfaceInMeters() {
      maximumDistanceAboveSurfaceInMeters = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'locationAccordingTo' field */
    public java.lang.CharSequence getLocationAccordingTo() {
      return locationAccordingTo;
    }
    
    /** Sets the value of the 'locationAccordingTo' field */
    public org.gbif.dwca.avro.Location.Builder setLocationAccordingTo(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.locationAccordingTo = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the 'locationAccordingTo' field has been set */
    public boolean hasLocationAccordingTo() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the 'locationAccordingTo' field */
    public org.gbif.dwca.avro.Location.Builder clearLocationAccordingTo() {
      locationAccordingTo = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /** Gets the value of the 'locationRemarks' field */
    public java.lang.CharSequence getLocationRemarks() {
      return locationRemarks;
    }
    
    /** Sets the value of the 'locationRemarks' field */
    public org.gbif.dwca.avro.Location.Builder setLocationRemarks(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.locationRemarks = value;
      fieldSetFlags()[24] = true;
      return this; 
    }
    
    /** Checks whether the 'locationRemarks' field has been set */
    public boolean hasLocationRemarks() {
      return fieldSetFlags()[24];
    }
    
    /** Clears the value of the 'locationRemarks' field */
    public org.gbif.dwca.avro.Location.Builder clearLocationRemarks() {
      locationRemarks = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /** Gets the value of the 'decimalLatitude' field */
    public java.lang.CharSequence getDecimalLatitude() {
      return decimalLatitude;
    }
    
    /** Sets the value of the 'decimalLatitude' field */
    public org.gbif.dwca.avro.Location.Builder setDecimalLatitude(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.decimalLatitude = value;
      fieldSetFlags()[25] = true;
      return this; 
    }
    
    /** Checks whether the 'decimalLatitude' field has been set */
    public boolean hasDecimalLatitude() {
      return fieldSetFlags()[25];
    }
    
    /** Clears the value of the 'decimalLatitude' field */
    public org.gbif.dwca.avro.Location.Builder clearDecimalLatitude() {
      decimalLatitude = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /** Gets the value of the 'decimalLongitude' field */
    public java.lang.CharSequence getDecimalLongitude() {
      return decimalLongitude;
    }
    
    /** Sets the value of the 'decimalLongitude' field */
    public org.gbif.dwca.avro.Location.Builder setDecimalLongitude(java.lang.CharSequence value) {
      validate(fields()[26], value);
      this.decimalLongitude = value;
      fieldSetFlags()[26] = true;
      return this; 
    }
    
    /** Checks whether the 'decimalLongitude' field has been set */
    public boolean hasDecimalLongitude() {
      return fieldSetFlags()[26];
    }
    
    /** Clears the value of the 'decimalLongitude' field */
    public org.gbif.dwca.avro.Location.Builder clearDecimalLongitude() {
      decimalLongitude = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /** Gets the value of the 'geodeticDatum' field */
    public java.lang.CharSequence getGeodeticDatum() {
      return geodeticDatum;
    }
    
    /** Sets the value of the 'geodeticDatum' field */
    public org.gbif.dwca.avro.Location.Builder setGeodeticDatum(java.lang.CharSequence value) {
      validate(fields()[27], value);
      this.geodeticDatum = value;
      fieldSetFlags()[27] = true;
      return this; 
    }
    
    /** Checks whether the 'geodeticDatum' field has been set */
    public boolean hasGeodeticDatum() {
      return fieldSetFlags()[27];
    }
    
    /** Clears the value of the 'geodeticDatum' field */
    public org.gbif.dwca.avro.Location.Builder clearGeodeticDatum() {
      geodeticDatum = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /** Gets the value of the 'coordinateUncertaintyInMeters' field */
    public java.lang.CharSequence getCoordinateUncertaintyInMeters() {
      return coordinateUncertaintyInMeters;
    }
    
    /** Sets the value of the 'coordinateUncertaintyInMeters' field */
    public org.gbif.dwca.avro.Location.Builder setCoordinateUncertaintyInMeters(java.lang.CharSequence value) {
      validate(fields()[28], value);
      this.coordinateUncertaintyInMeters = value;
      fieldSetFlags()[28] = true;
      return this; 
    }
    
    /** Checks whether the 'coordinateUncertaintyInMeters' field has been set */
    public boolean hasCoordinateUncertaintyInMeters() {
      return fieldSetFlags()[28];
    }
    
    /** Clears the value of the 'coordinateUncertaintyInMeters' field */
    public org.gbif.dwca.avro.Location.Builder clearCoordinateUncertaintyInMeters() {
      coordinateUncertaintyInMeters = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /** Gets the value of the 'coordinatePrecision' field */
    public java.lang.CharSequence getCoordinatePrecision() {
      return coordinatePrecision;
    }
    
    /** Sets the value of the 'coordinatePrecision' field */
    public org.gbif.dwca.avro.Location.Builder setCoordinatePrecision(java.lang.CharSequence value) {
      validate(fields()[29], value);
      this.coordinatePrecision = value;
      fieldSetFlags()[29] = true;
      return this; 
    }
    
    /** Checks whether the 'coordinatePrecision' field has been set */
    public boolean hasCoordinatePrecision() {
      return fieldSetFlags()[29];
    }
    
    /** Clears the value of the 'coordinatePrecision' field */
    public org.gbif.dwca.avro.Location.Builder clearCoordinatePrecision() {
      coordinatePrecision = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /** Gets the value of the 'pointRadiusSpatialFit' field */
    public java.lang.CharSequence getPointRadiusSpatialFit() {
      return pointRadiusSpatialFit;
    }
    
    /** Sets the value of the 'pointRadiusSpatialFit' field */
    public org.gbif.dwca.avro.Location.Builder setPointRadiusSpatialFit(java.lang.CharSequence value) {
      validate(fields()[30], value);
      this.pointRadiusSpatialFit = value;
      fieldSetFlags()[30] = true;
      return this; 
    }
    
    /** Checks whether the 'pointRadiusSpatialFit' field has been set */
    public boolean hasPointRadiusSpatialFit() {
      return fieldSetFlags()[30];
    }
    
    /** Clears the value of the 'pointRadiusSpatialFit' field */
    public org.gbif.dwca.avro.Location.Builder clearPointRadiusSpatialFit() {
      pointRadiusSpatialFit = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /** Gets the value of the 'verbatimCoordinates' field */
    public java.lang.CharSequence getVerbatimCoordinates() {
      return verbatimCoordinates;
    }
    
    /** Sets the value of the 'verbatimCoordinates' field */
    public org.gbif.dwca.avro.Location.Builder setVerbatimCoordinates(java.lang.CharSequence value) {
      validate(fields()[31], value);
      this.verbatimCoordinates = value;
      fieldSetFlags()[31] = true;
      return this; 
    }
    
    /** Checks whether the 'verbatimCoordinates' field has been set */
    public boolean hasVerbatimCoordinates() {
      return fieldSetFlags()[31];
    }
    
    /** Clears the value of the 'verbatimCoordinates' field */
    public org.gbif.dwca.avro.Location.Builder clearVerbatimCoordinates() {
      verbatimCoordinates = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /** Gets the value of the 'verbatimLatitude' field */
    public java.lang.CharSequence getVerbatimLatitude() {
      return verbatimLatitude;
    }
    
    /** Sets the value of the 'verbatimLatitude' field */
    public org.gbif.dwca.avro.Location.Builder setVerbatimLatitude(java.lang.CharSequence value) {
      validate(fields()[32], value);
      this.verbatimLatitude = value;
      fieldSetFlags()[32] = true;
      return this; 
    }
    
    /** Checks whether the 'verbatimLatitude' field has been set */
    public boolean hasVerbatimLatitude() {
      return fieldSetFlags()[32];
    }
    
    /** Clears the value of the 'verbatimLatitude' field */
    public org.gbif.dwca.avro.Location.Builder clearVerbatimLatitude() {
      verbatimLatitude = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /** Gets the value of the 'verbatimLongitude' field */
    public java.lang.CharSequence getVerbatimLongitude() {
      return verbatimLongitude;
    }
    
    /** Sets the value of the 'verbatimLongitude' field */
    public org.gbif.dwca.avro.Location.Builder setVerbatimLongitude(java.lang.CharSequence value) {
      validate(fields()[33], value);
      this.verbatimLongitude = value;
      fieldSetFlags()[33] = true;
      return this; 
    }
    
    /** Checks whether the 'verbatimLongitude' field has been set */
    public boolean hasVerbatimLongitude() {
      return fieldSetFlags()[33];
    }
    
    /** Clears the value of the 'verbatimLongitude' field */
    public org.gbif.dwca.avro.Location.Builder clearVerbatimLongitude() {
      verbatimLongitude = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /** Gets the value of the 'verbatimCoordinateSystem' field */
    public java.lang.CharSequence getVerbatimCoordinateSystem() {
      return verbatimCoordinateSystem;
    }
    
    /** Sets the value of the 'verbatimCoordinateSystem' field */
    public org.gbif.dwca.avro.Location.Builder setVerbatimCoordinateSystem(java.lang.CharSequence value) {
      validate(fields()[34], value);
      this.verbatimCoordinateSystem = value;
      fieldSetFlags()[34] = true;
      return this; 
    }
    
    /** Checks whether the 'verbatimCoordinateSystem' field has been set */
    public boolean hasVerbatimCoordinateSystem() {
      return fieldSetFlags()[34];
    }
    
    /** Clears the value of the 'verbatimCoordinateSystem' field */
    public org.gbif.dwca.avro.Location.Builder clearVerbatimCoordinateSystem() {
      verbatimCoordinateSystem = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /** Gets the value of the 'verbatimSRS' field */
    public java.lang.CharSequence getVerbatimSRS() {
      return verbatimSRS;
    }
    
    /** Sets the value of the 'verbatimSRS' field */
    public org.gbif.dwca.avro.Location.Builder setVerbatimSRS(java.lang.CharSequence value) {
      validate(fields()[35], value);
      this.verbatimSRS = value;
      fieldSetFlags()[35] = true;
      return this; 
    }
    
    /** Checks whether the 'verbatimSRS' field has been set */
    public boolean hasVerbatimSRS() {
      return fieldSetFlags()[35];
    }
    
    /** Clears the value of the 'verbatimSRS' field */
    public org.gbif.dwca.avro.Location.Builder clearVerbatimSRS() {
      verbatimSRS = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /** Gets the value of the 'footprintWKT' field */
    public java.lang.CharSequence getFootprintWKT() {
      return footprintWKT;
    }
    
    /** Sets the value of the 'footprintWKT' field */
    public org.gbif.dwca.avro.Location.Builder setFootprintWKT(java.lang.CharSequence value) {
      validate(fields()[36], value);
      this.footprintWKT = value;
      fieldSetFlags()[36] = true;
      return this; 
    }
    
    /** Checks whether the 'footprintWKT' field has been set */
    public boolean hasFootprintWKT() {
      return fieldSetFlags()[36];
    }
    
    /** Clears the value of the 'footprintWKT' field */
    public org.gbif.dwca.avro.Location.Builder clearFootprintWKT() {
      footprintWKT = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /** Gets the value of the 'footprintSRS' field */
    public java.lang.CharSequence getFootprintSRS() {
      return footprintSRS;
    }
    
    /** Sets the value of the 'footprintSRS' field */
    public org.gbif.dwca.avro.Location.Builder setFootprintSRS(java.lang.CharSequence value) {
      validate(fields()[37], value);
      this.footprintSRS = value;
      fieldSetFlags()[37] = true;
      return this; 
    }
    
    /** Checks whether the 'footprintSRS' field has been set */
    public boolean hasFootprintSRS() {
      return fieldSetFlags()[37];
    }
    
    /** Clears the value of the 'footprintSRS' field */
    public org.gbif.dwca.avro.Location.Builder clearFootprintSRS() {
      footprintSRS = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /** Gets the value of the 'footprintSpatialFit' field */
    public java.lang.CharSequence getFootprintSpatialFit() {
      return footprintSpatialFit;
    }
    
    /** Sets the value of the 'footprintSpatialFit' field */
    public org.gbif.dwca.avro.Location.Builder setFootprintSpatialFit(java.lang.CharSequence value) {
      validate(fields()[38], value);
      this.footprintSpatialFit = value;
      fieldSetFlags()[38] = true;
      return this; 
    }
    
    /** Checks whether the 'footprintSpatialFit' field has been set */
    public boolean hasFootprintSpatialFit() {
      return fieldSetFlags()[38];
    }
    
    /** Clears the value of the 'footprintSpatialFit' field */
    public org.gbif.dwca.avro.Location.Builder clearFootprintSpatialFit() {
      footprintSpatialFit = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /** Gets the value of the 'georeferencedBy' field */
    public java.lang.CharSequence getGeoreferencedBy() {
      return georeferencedBy;
    }
    
    /** Sets the value of the 'georeferencedBy' field */
    public org.gbif.dwca.avro.Location.Builder setGeoreferencedBy(java.lang.CharSequence value) {
      validate(fields()[39], value);
      this.georeferencedBy = value;
      fieldSetFlags()[39] = true;
      return this; 
    }
    
    /** Checks whether the 'georeferencedBy' field has been set */
    public boolean hasGeoreferencedBy() {
      return fieldSetFlags()[39];
    }
    
    /** Clears the value of the 'georeferencedBy' field */
    public org.gbif.dwca.avro.Location.Builder clearGeoreferencedBy() {
      georeferencedBy = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /** Gets the value of the 'georeferencedDate' field */
    public java.lang.CharSequence getGeoreferencedDate() {
      return georeferencedDate;
    }
    
    /** Sets the value of the 'georeferencedDate' field */
    public org.gbif.dwca.avro.Location.Builder setGeoreferencedDate(java.lang.CharSequence value) {
      validate(fields()[40], value);
      this.georeferencedDate = value;
      fieldSetFlags()[40] = true;
      return this; 
    }
    
    /** Checks whether the 'georeferencedDate' field has been set */
    public boolean hasGeoreferencedDate() {
      return fieldSetFlags()[40];
    }
    
    /** Clears the value of the 'georeferencedDate' field */
    public org.gbif.dwca.avro.Location.Builder clearGeoreferencedDate() {
      georeferencedDate = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /** Gets the value of the 'georeferenceProtocol' field */
    public java.lang.CharSequence getGeoreferenceProtocol() {
      return georeferenceProtocol;
    }
    
    /** Sets the value of the 'georeferenceProtocol' field */
    public org.gbif.dwca.avro.Location.Builder setGeoreferenceProtocol(java.lang.CharSequence value) {
      validate(fields()[41], value);
      this.georeferenceProtocol = value;
      fieldSetFlags()[41] = true;
      return this; 
    }
    
    /** Checks whether the 'georeferenceProtocol' field has been set */
    public boolean hasGeoreferenceProtocol() {
      return fieldSetFlags()[41];
    }
    
    /** Clears the value of the 'georeferenceProtocol' field */
    public org.gbif.dwca.avro.Location.Builder clearGeoreferenceProtocol() {
      georeferenceProtocol = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    /** Gets the value of the 'georeferenceSources' field */
    public java.lang.CharSequence getGeoreferenceSources() {
      return georeferenceSources;
    }
    
    /** Sets the value of the 'georeferenceSources' field */
    public org.gbif.dwca.avro.Location.Builder setGeoreferenceSources(java.lang.CharSequence value) {
      validate(fields()[42], value);
      this.georeferenceSources = value;
      fieldSetFlags()[42] = true;
      return this; 
    }
    
    /** Checks whether the 'georeferenceSources' field has been set */
    public boolean hasGeoreferenceSources() {
      return fieldSetFlags()[42];
    }
    
    /** Clears the value of the 'georeferenceSources' field */
    public org.gbif.dwca.avro.Location.Builder clearGeoreferenceSources() {
      georeferenceSources = null;
      fieldSetFlags()[42] = false;
      return this;
    }

    /** Gets the value of the 'georeferenceVerificationStatus' field */
    public java.lang.CharSequence getGeoreferenceVerificationStatus() {
      return georeferenceVerificationStatus;
    }
    
    /** Sets the value of the 'georeferenceVerificationStatus' field */
    public org.gbif.dwca.avro.Location.Builder setGeoreferenceVerificationStatus(java.lang.CharSequence value) {
      validate(fields()[43], value);
      this.georeferenceVerificationStatus = value;
      fieldSetFlags()[43] = true;
      return this; 
    }
    
    /** Checks whether the 'georeferenceVerificationStatus' field has been set */
    public boolean hasGeoreferenceVerificationStatus() {
      return fieldSetFlags()[43];
    }
    
    /** Clears the value of the 'georeferenceVerificationStatus' field */
    public org.gbif.dwca.avro.Location.Builder clearGeoreferenceVerificationStatus() {
      georeferenceVerificationStatus = null;
      fieldSetFlags()[43] = false;
      return this;
    }

    /** Gets the value of the 'georeferenceRemarks' field */
    public java.lang.CharSequence getGeoreferenceRemarks() {
      return georeferenceRemarks;
    }
    
    /** Sets the value of the 'georeferenceRemarks' field */
    public org.gbif.dwca.avro.Location.Builder setGeoreferenceRemarks(java.lang.CharSequence value) {
      validate(fields()[44], value);
      this.georeferenceRemarks = value;
      fieldSetFlags()[44] = true;
      return this; 
    }
    
    /** Checks whether the 'georeferenceRemarks' field has been set */
    public boolean hasGeoreferenceRemarks() {
      return fieldSetFlags()[44];
    }
    
    /** Clears the value of the 'georeferenceRemarks' field */
    public org.gbif.dwca.avro.Location.Builder clearGeoreferenceRemarks() {
      georeferenceRemarks = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /** Gets the value of the 'dcterms_type' field */
    public java.lang.CharSequence getDctermsType() {
      return dcterms_type;
    }
    
    /** Sets the value of the 'dcterms_type' field */
    public org.gbif.dwca.avro.Location.Builder setDctermsType(java.lang.CharSequence value) {
      validate(fields()[45], value);
      this.dcterms_type = value;
      fieldSetFlags()[45] = true;
      return this; 
    }
    
    /** Checks whether the 'dcterms_type' field has been set */
    public boolean hasDctermsType() {
      return fieldSetFlags()[45];
    }
    
    /** Clears the value of the 'dcterms_type' field */
    public org.gbif.dwca.avro.Location.Builder clearDctermsType() {
      dcterms_type = null;
      fieldSetFlags()[45] = false;
      return this;
    }

    /** Gets the value of the 'dcterms_modified' field */
    public java.lang.CharSequence getDctermsModified() {
      return dcterms_modified;
    }
    
    /** Sets the value of the 'dcterms_modified' field */
    public org.gbif.dwca.avro.Location.Builder setDctermsModified(java.lang.CharSequence value) {
      validate(fields()[46], value);
      this.dcterms_modified = value;
      fieldSetFlags()[46] = true;
      return this; 
    }
    
    /** Checks whether the 'dcterms_modified' field has been set */
    public boolean hasDctermsModified() {
      return fieldSetFlags()[46];
    }
    
    /** Clears the value of the 'dcterms_modified' field */
    public org.gbif.dwca.avro.Location.Builder clearDctermsModified() {
      dcterms_modified = null;
      fieldSetFlags()[46] = false;
      return this;
    }

    /** Gets the value of the 'dcterms_language' field */
    public java.lang.CharSequence getDctermsLanguage() {
      return dcterms_language;
    }
    
    /** Sets the value of the 'dcterms_language' field */
    public org.gbif.dwca.avro.Location.Builder setDctermsLanguage(java.lang.CharSequence value) {
      validate(fields()[47], value);
      this.dcterms_language = value;
      fieldSetFlags()[47] = true;
      return this; 
    }
    
    /** Checks whether the 'dcterms_language' field has been set */
    public boolean hasDctermsLanguage() {
      return fieldSetFlags()[47];
    }
    
    /** Clears the value of the 'dcterms_language' field */
    public org.gbif.dwca.avro.Location.Builder clearDctermsLanguage() {
      dcterms_language = null;
      fieldSetFlags()[47] = false;
      return this;
    }

    /** Gets the value of the 'dcterms_license' field */
    public java.lang.CharSequence getDctermsLicense() {
      return dcterms_license;
    }
    
    /** Sets the value of the 'dcterms_license' field */
    public org.gbif.dwca.avro.Location.Builder setDctermsLicense(java.lang.CharSequence value) {
      validate(fields()[48], value);
      this.dcterms_license = value;
      fieldSetFlags()[48] = true;
      return this; 
    }
    
    /** Checks whether the 'dcterms_license' field has been set */
    public boolean hasDctermsLicense() {
      return fieldSetFlags()[48];
    }
    
    /** Clears the value of the 'dcterms_license' field */
    public org.gbif.dwca.avro.Location.Builder clearDctermsLicense() {
      dcterms_license = null;
      fieldSetFlags()[48] = false;
      return this;
    }

    /** Gets the value of the 'dcterms_rightsHolder' field */
    public java.lang.CharSequence getDctermsRightsHolder() {
      return dcterms_rightsHolder;
    }
    
    /** Sets the value of the 'dcterms_rightsHolder' field */
    public org.gbif.dwca.avro.Location.Builder setDctermsRightsHolder(java.lang.CharSequence value) {
      validate(fields()[49], value);
      this.dcterms_rightsHolder = value;
      fieldSetFlags()[49] = true;
      return this; 
    }
    
    /** Checks whether the 'dcterms_rightsHolder' field has been set */
    public boolean hasDctermsRightsHolder() {
      return fieldSetFlags()[49];
    }
    
    /** Clears the value of the 'dcterms_rightsHolder' field */
    public org.gbif.dwca.avro.Location.Builder clearDctermsRightsHolder() {
      dcterms_rightsHolder = null;
      fieldSetFlags()[49] = false;
      return this;
    }

    /** Gets the value of the 'dcterms_accessRights' field */
    public java.lang.CharSequence getDctermsAccessRights() {
      return dcterms_accessRights;
    }
    
    /** Sets the value of the 'dcterms_accessRights' field */
    public org.gbif.dwca.avro.Location.Builder setDctermsAccessRights(java.lang.CharSequence value) {
      validate(fields()[50], value);
      this.dcterms_accessRights = value;
      fieldSetFlags()[50] = true;
      return this; 
    }
    
    /** Checks whether the 'dcterms_accessRights' field has been set */
    public boolean hasDctermsAccessRights() {
      return fieldSetFlags()[50];
    }
    
    /** Clears the value of the 'dcterms_accessRights' field */
    public org.gbif.dwca.avro.Location.Builder clearDctermsAccessRights() {
      dcterms_accessRights = null;
      fieldSetFlags()[50] = false;
      return this;
    }

    /** Gets the value of the 'dcterms_bibliographicCitation' field */
    public java.lang.CharSequence getDctermsBibliographicCitation() {
      return dcterms_bibliographicCitation;
    }
    
    /** Sets the value of the 'dcterms_bibliographicCitation' field */
    public org.gbif.dwca.avro.Location.Builder setDctermsBibliographicCitation(java.lang.CharSequence value) {
      validate(fields()[51], value);
      this.dcterms_bibliographicCitation = value;
      fieldSetFlags()[51] = true;
      return this; 
    }
    
    /** Checks whether the 'dcterms_bibliographicCitation' field has been set */
    public boolean hasDctermsBibliographicCitation() {
      return fieldSetFlags()[51];
    }
    
    /** Clears the value of the 'dcterms_bibliographicCitation' field */
    public org.gbif.dwca.avro.Location.Builder clearDctermsBibliographicCitation() {
      dcterms_bibliographicCitation = null;
      fieldSetFlags()[51] = false;
      return this;
    }

    /** Gets the value of the 'dcterms_references' field */
    public java.lang.CharSequence getDctermsReferences() {
      return dcterms_references;
    }
    
    /** Sets the value of the 'dcterms_references' field */
    public org.gbif.dwca.avro.Location.Builder setDctermsReferences(java.lang.CharSequence value) {
      validate(fields()[52], value);
      this.dcterms_references = value;
      fieldSetFlags()[52] = true;
      return this; 
    }
    
    /** Checks whether the 'dcterms_references' field has been set */
    public boolean hasDctermsReferences() {
      return fieldSetFlags()[52];
    }
    
    /** Clears the value of the 'dcterms_references' field */
    public org.gbif.dwca.avro.Location.Builder clearDctermsReferences() {
      dcterms_references = null;
      fieldSetFlags()[52] = false;
      return this;
    }

    /** Gets the value of the 'institutionID' field */
    public java.lang.CharSequence getInstitutionID() {
      return institutionID;
    }
    
    /** Sets the value of the 'institutionID' field */
    public org.gbif.dwca.avro.Location.Builder setInstitutionID(java.lang.CharSequence value) {
      validate(fields()[53], value);
      this.institutionID = value;
      fieldSetFlags()[53] = true;
      return this; 
    }
    
    /** Checks whether the 'institutionID' field has been set */
    public boolean hasInstitutionID() {
      return fieldSetFlags()[53];
    }
    
    /** Clears the value of the 'institutionID' field */
    public org.gbif.dwca.avro.Location.Builder clearInstitutionID() {
      institutionID = null;
      fieldSetFlags()[53] = false;
      return this;
    }

    /** Gets the value of the 'collectionID' field */
    public java.lang.CharSequence getCollectionID() {
      return collectionID;
    }
    
    /** Sets the value of the 'collectionID' field */
    public org.gbif.dwca.avro.Location.Builder setCollectionID(java.lang.CharSequence value) {
      validate(fields()[54], value);
      this.collectionID = value;
      fieldSetFlags()[54] = true;
      return this; 
    }
    
    /** Checks whether the 'collectionID' field has been set */
    public boolean hasCollectionID() {
      return fieldSetFlags()[54];
    }
    
    /** Clears the value of the 'collectionID' field */
    public org.gbif.dwca.avro.Location.Builder clearCollectionID() {
      collectionID = null;
      fieldSetFlags()[54] = false;
      return this;
    }

    /** Gets the value of the 'datasetID' field */
    public java.lang.CharSequence getDatasetID() {
      return datasetID;
    }
    
    /** Sets the value of the 'datasetID' field */
    public org.gbif.dwca.avro.Location.Builder setDatasetID(java.lang.CharSequence value) {
      validate(fields()[55], value);
      this.datasetID = value;
      fieldSetFlags()[55] = true;
      return this; 
    }
    
    /** Checks whether the 'datasetID' field has been set */
    public boolean hasDatasetID() {
      return fieldSetFlags()[55];
    }
    
    /** Clears the value of the 'datasetID' field */
    public org.gbif.dwca.avro.Location.Builder clearDatasetID() {
      datasetID = null;
      fieldSetFlags()[55] = false;
      return this;
    }

    /** Gets the value of the 'institutionCode' field */
    public java.lang.CharSequence getInstitutionCode() {
      return institutionCode;
    }
    
    /** Sets the value of the 'institutionCode' field */
    public org.gbif.dwca.avro.Location.Builder setInstitutionCode(java.lang.CharSequence value) {
      validate(fields()[56], value);
      this.institutionCode = value;
      fieldSetFlags()[56] = true;
      return this; 
    }
    
    /** Checks whether the 'institutionCode' field has been set */
    public boolean hasInstitutionCode() {
      return fieldSetFlags()[56];
    }
    
    /** Clears the value of the 'institutionCode' field */
    public org.gbif.dwca.avro.Location.Builder clearInstitutionCode() {
      institutionCode = null;
      fieldSetFlags()[56] = false;
      return this;
    }

    /** Gets the value of the 'collectionCode' field */
    public java.lang.CharSequence getCollectionCode() {
      return collectionCode;
    }
    
    /** Sets the value of the 'collectionCode' field */
    public org.gbif.dwca.avro.Location.Builder setCollectionCode(java.lang.CharSequence value) {
      validate(fields()[57], value);
      this.collectionCode = value;
      fieldSetFlags()[57] = true;
      return this; 
    }
    
    /** Checks whether the 'collectionCode' field has been set */
    public boolean hasCollectionCode() {
      return fieldSetFlags()[57];
    }
    
    /** Clears the value of the 'collectionCode' field */
    public org.gbif.dwca.avro.Location.Builder clearCollectionCode() {
      collectionCode = null;
      fieldSetFlags()[57] = false;
      return this;
    }

    /** Gets the value of the 'datasetName' field */
    public java.lang.CharSequence getDatasetName() {
      return datasetName;
    }
    
    /** Sets the value of the 'datasetName' field */
    public org.gbif.dwca.avro.Location.Builder setDatasetName(java.lang.CharSequence value) {
      validate(fields()[58], value);
      this.datasetName = value;
      fieldSetFlags()[58] = true;
      return this; 
    }
    
    /** Checks whether the 'datasetName' field has been set */
    public boolean hasDatasetName() {
      return fieldSetFlags()[58];
    }
    
    /** Clears the value of the 'datasetName' field */
    public org.gbif.dwca.avro.Location.Builder clearDatasetName() {
      datasetName = null;
      fieldSetFlags()[58] = false;
      return this;
    }

    /** Gets the value of the 'ownerInstitutionCode' field */
    public java.lang.CharSequence getOwnerInstitutionCode() {
      return ownerInstitutionCode;
    }
    
    /** Sets the value of the 'ownerInstitutionCode' field */
    public org.gbif.dwca.avro.Location.Builder setOwnerInstitutionCode(java.lang.CharSequence value) {
      validate(fields()[59], value);
      this.ownerInstitutionCode = value;
      fieldSetFlags()[59] = true;
      return this; 
    }
    
    /** Checks whether the 'ownerInstitutionCode' field has been set */
    public boolean hasOwnerInstitutionCode() {
      return fieldSetFlags()[59];
    }
    
    /** Clears the value of the 'ownerInstitutionCode' field */
    public org.gbif.dwca.avro.Location.Builder clearOwnerInstitutionCode() {
      ownerInstitutionCode = null;
      fieldSetFlags()[59] = false;
      return this;
    }

    /** Gets the value of the 'basisOfRecord' field */
    public java.lang.CharSequence getBasisOfRecord() {
      return basisOfRecord;
    }
    
    /** Sets the value of the 'basisOfRecord' field */
    public org.gbif.dwca.avro.Location.Builder setBasisOfRecord(java.lang.CharSequence value) {
      validate(fields()[60], value);
      this.basisOfRecord = value;
      fieldSetFlags()[60] = true;
      return this; 
    }
    
    /** Checks whether the 'basisOfRecord' field has been set */
    public boolean hasBasisOfRecord() {
      return fieldSetFlags()[60];
    }
    
    /** Clears the value of the 'basisOfRecord' field */
    public org.gbif.dwca.avro.Location.Builder clearBasisOfRecord() {
      basisOfRecord = null;
      fieldSetFlags()[60] = false;
      return this;
    }

    /** Gets the value of the 'informationWithheld' field */
    public java.lang.CharSequence getInformationWithheld() {
      return informationWithheld;
    }
    
    /** Sets the value of the 'informationWithheld' field */
    public org.gbif.dwca.avro.Location.Builder setInformationWithheld(java.lang.CharSequence value) {
      validate(fields()[61], value);
      this.informationWithheld = value;
      fieldSetFlags()[61] = true;
      return this; 
    }
    
    /** Checks whether the 'informationWithheld' field has been set */
    public boolean hasInformationWithheld() {
      return fieldSetFlags()[61];
    }
    
    /** Clears the value of the 'informationWithheld' field */
    public org.gbif.dwca.avro.Location.Builder clearInformationWithheld() {
      informationWithheld = null;
      fieldSetFlags()[61] = false;
      return this;
    }

    /** Gets the value of the 'dataGeneralizations' field */
    public java.lang.CharSequence getDataGeneralizations() {
      return dataGeneralizations;
    }
    
    /** Sets the value of the 'dataGeneralizations' field */
    public org.gbif.dwca.avro.Location.Builder setDataGeneralizations(java.lang.CharSequence value) {
      validate(fields()[62], value);
      this.dataGeneralizations = value;
      fieldSetFlags()[62] = true;
      return this; 
    }
    
    /** Checks whether the 'dataGeneralizations' field has been set */
    public boolean hasDataGeneralizations() {
      return fieldSetFlags()[62];
    }
    
    /** Clears the value of the 'dataGeneralizations' field */
    public org.gbif.dwca.avro.Location.Builder clearDataGeneralizations() {
      dataGeneralizations = null;
      fieldSetFlags()[62] = false;
      return this;
    }

    /** Gets the value of the 'dynamicProperties' field */
    public java.lang.CharSequence getDynamicProperties() {
      return dynamicProperties;
    }
    
    /** Sets the value of the 'dynamicProperties' field */
    public org.gbif.dwca.avro.Location.Builder setDynamicProperties(java.lang.CharSequence value) {
      validate(fields()[63], value);
      this.dynamicProperties = value;
      fieldSetFlags()[63] = true;
      return this; 
    }
    
    /** Checks whether the 'dynamicProperties' field has been set */
    public boolean hasDynamicProperties() {
      return fieldSetFlags()[63];
    }
    
    /** Clears the value of the 'dynamicProperties' field */
    public org.gbif.dwca.avro.Location.Builder clearDynamicProperties() {
      dynamicProperties = null;
      fieldSetFlags()[63] = false;
      return this;
    }

    @Override
    public Location build() {
      try {
        Location record = new Location();
        record.occurrenceID = fieldSetFlags()[0] ? this.occurrenceID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.locationID = fieldSetFlags()[1] ? this.locationID : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.higherGeographyID = fieldSetFlags()[2] ? this.higherGeographyID : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.higherGeography = fieldSetFlags()[3] ? this.higherGeography : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.continent = fieldSetFlags()[4] ? this.continent : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.waterBody = fieldSetFlags()[5] ? this.waterBody : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.islandGroup = fieldSetFlags()[6] ? this.islandGroup : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.island = fieldSetFlags()[7] ? this.island : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.country = fieldSetFlags()[8] ? this.country : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.countryCode = fieldSetFlags()[9] ? this.countryCode : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.stateProvince = fieldSetFlags()[10] ? this.stateProvince : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.county = fieldSetFlags()[11] ? this.county : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.municipality = fieldSetFlags()[12] ? this.municipality : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.locality = fieldSetFlags()[13] ? this.locality : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.verbatimLocality = fieldSetFlags()[14] ? this.verbatimLocality : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.minimumElevationInMeters = fieldSetFlags()[15] ? this.minimumElevationInMeters : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.maximumElevationInMeters = fieldSetFlags()[16] ? this.maximumElevationInMeters : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.verbatimElevation = fieldSetFlags()[17] ? this.verbatimElevation : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.minimumDepthInMeters = fieldSetFlags()[18] ? this.minimumDepthInMeters : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.maximumDepthInMeters = fieldSetFlags()[19] ? this.maximumDepthInMeters : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.verbatimDepth = fieldSetFlags()[20] ? this.verbatimDepth : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.minimumDistanceAboveSurfaceInMeters = fieldSetFlags()[21] ? this.minimumDistanceAboveSurfaceInMeters : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.maximumDistanceAboveSurfaceInMeters = fieldSetFlags()[22] ? this.maximumDistanceAboveSurfaceInMeters : (java.lang.CharSequence) defaultValue(fields()[22]);
        record.locationAccordingTo = fieldSetFlags()[23] ? this.locationAccordingTo : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.locationRemarks = fieldSetFlags()[24] ? this.locationRemarks : (java.lang.CharSequence) defaultValue(fields()[24]);
        record.decimalLatitude = fieldSetFlags()[25] ? this.decimalLatitude : (java.lang.CharSequence) defaultValue(fields()[25]);
        record.decimalLongitude = fieldSetFlags()[26] ? this.decimalLongitude : (java.lang.CharSequence) defaultValue(fields()[26]);
        record.geodeticDatum = fieldSetFlags()[27] ? this.geodeticDatum : (java.lang.CharSequence) defaultValue(fields()[27]);
        record.coordinateUncertaintyInMeters = fieldSetFlags()[28] ? this.coordinateUncertaintyInMeters : (java.lang.CharSequence) defaultValue(fields()[28]);
        record.coordinatePrecision = fieldSetFlags()[29] ? this.coordinatePrecision : (java.lang.CharSequence) defaultValue(fields()[29]);
        record.pointRadiusSpatialFit = fieldSetFlags()[30] ? this.pointRadiusSpatialFit : (java.lang.CharSequence) defaultValue(fields()[30]);
        record.verbatimCoordinates = fieldSetFlags()[31] ? this.verbatimCoordinates : (java.lang.CharSequence) defaultValue(fields()[31]);
        record.verbatimLatitude = fieldSetFlags()[32] ? this.verbatimLatitude : (java.lang.CharSequence) defaultValue(fields()[32]);
        record.verbatimLongitude = fieldSetFlags()[33] ? this.verbatimLongitude : (java.lang.CharSequence) defaultValue(fields()[33]);
        record.verbatimCoordinateSystem = fieldSetFlags()[34] ? this.verbatimCoordinateSystem : (java.lang.CharSequence) defaultValue(fields()[34]);
        record.verbatimSRS = fieldSetFlags()[35] ? this.verbatimSRS : (java.lang.CharSequence) defaultValue(fields()[35]);
        record.footprintWKT = fieldSetFlags()[36] ? this.footprintWKT : (java.lang.CharSequence) defaultValue(fields()[36]);
        record.footprintSRS = fieldSetFlags()[37] ? this.footprintSRS : (java.lang.CharSequence) defaultValue(fields()[37]);
        record.footprintSpatialFit = fieldSetFlags()[38] ? this.footprintSpatialFit : (java.lang.CharSequence) defaultValue(fields()[38]);
        record.georeferencedBy = fieldSetFlags()[39] ? this.georeferencedBy : (java.lang.CharSequence) defaultValue(fields()[39]);
        record.georeferencedDate = fieldSetFlags()[40] ? this.georeferencedDate : (java.lang.CharSequence) defaultValue(fields()[40]);
        record.georeferenceProtocol = fieldSetFlags()[41] ? this.georeferenceProtocol : (java.lang.CharSequence) defaultValue(fields()[41]);
        record.georeferenceSources = fieldSetFlags()[42] ? this.georeferenceSources : (java.lang.CharSequence) defaultValue(fields()[42]);
        record.georeferenceVerificationStatus = fieldSetFlags()[43] ? this.georeferenceVerificationStatus : (java.lang.CharSequence) defaultValue(fields()[43]);
        record.georeferenceRemarks = fieldSetFlags()[44] ? this.georeferenceRemarks : (java.lang.CharSequence) defaultValue(fields()[44]);
        record.dcterms_type = fieldSetFlags()[45] ? this.dcterms_type : (java.lang.CharSequence) defaultValue(fields()[45]);
        record.dcterms_modified = fieldSetFlags()[46] ? this.dcterms_modified : (java.lang.CharSequence) defaultValue(fields()[46]);
        record.dcterms_language = fieldSetFlags()[47] ? this.dcterms_language : (java.lang.CharSequence) defaultValue(fields()[47]);
        record.dcterms_license = fieldSetFlags()[48] ? this.dcterms_license : (java.lang.CharSequence) defaultValue(fields()[48]);
        record.dcterms_rightsHolder = fieldSetFlags()[49] ? this.dcterms_rightsHolder : (java.lang.CharSequence) defaultValue(fields()[49]);
        record.dcterms_accessRights = fieldSetFlags()[50] ? this.dcterms_accessRights : (java.lang.CharSequence) defaultValue(fields()[50]);
        record.dcterms_bibliographicCitation = fieldSetFlags()[51] ? this.dcterms_bibliographicCitation : (java.lang.CharSequence) defaultValue(fields()[51]);
        record.dcterms_references = fieldSetFlags()[52] ? this.dcterms_references : (java.lang.CharSequence) defaultValue(fields()[52]);
        record.institutionID = fieldSetFlags()[53] ? this.institutionID : (java.lang.CharSequence) defaultValue(fields()[53]);
        record.collectionID = fieldSetFlags()[54] ? this.collectionID : (java.lang.CharSequence) defaultValue(fields()[54]);
        record.datasetID = fieldSetFlags()[55] ? this.datasetID : (java.lang.CharSequence) defaultValue(fields()[55]);
        record.institutionCode = fieldSetFlags()[56] ? this.institutionCode : (java.lang.CharSequence) defaultValue(fields()[56]);
        record.collectionCode = fieldSetFlags()[57] ? this.collectionCode : (java.lang.CharSequence) defaultValue(fields()[57]);
        record.datasetName = fieldSetFlags()[58] ? this.datasetName : (java.lang.CharSequence) defaultValue(fields()[58]);
        record.ownerInstitutionCode = fieldSetFlags()[59] ? this.ownerInstitutionCode : (java.lang.CharSequence) defaultValue(fields()[59]);
        record.basisOfRecord = fieldSetFlags()[60] ? this.basisOfRecord : (java.lang.CharSequence) defaultValue(fields()[60]);
        record.informationWithheld = fieldSetFlags()[61] ? this.informationWithheld : (java.lang.CharSequence) defaultValue(fields()[61]);
        record.dataGeneralizations = fieldSetFlags()[62] ? this.dataGeneralizations : (java.lang.CharSequence) defaultValue(fields()[62]);
        record.dynamicProperties = fieldSetFlags()[63] ? this.dynamicProperties : (java.lang.CharSequence) defaultValue(fields()[63]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
