/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.gbif.pipelines.io.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TypedOccurrence extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TypedOccurrence\",\"namespace\":\"org.gbif.pipelines.io.avro\",\"fields\":[{\"name\":\"occurrenceId\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"kingdom\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"phylum\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"class\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"order\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"family\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"genus\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"species\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"specificEpithet\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"infraspecificEpithet\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"taxonRank\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"scientificName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"scientificNameAuthorship\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"kingdomKey\",\"type\":\"int\"},{\"name\":\"phylumKey\",\"type\":\"int\"},{\"name\":\"classKey\",\"type\":\"int\"},{\"name\":\"orderKey\",\"type\":\"int\"},{\"name\":\"familyKey\",\"type\":\"int\"},{\"name\":\"genusKey\",\"type\":\"int\"},{\"name\":\"speciesKey\",\"type\":\"int\"},{\"name\":\"nubKey\",\"type\":\"int\"},{\"name\":\"basisOfRecord\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"decimalLatitude\",\"type\":\"double\"},{\"name\":\"decimalLongitude\",\"type\":\"double\"},{\"name\":\"geodeticDatum\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"country\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"eventDate\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"year\",\"type\":\"int\"},{\"name\":\"month\",\"type\":\"int\"},{\"name\":\"day\",\"type\":\"int\"},{\"name\":\"location\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence occurrenceId;
  @Deprecated public java.lang.CharSequence kingdom;
  @Deprecated public java.lang.CharSequence phylum;
  @Deprecated public java.lang.CharSequence class$;
  @Deprecated public java.lang.CharSequence order;
  @Deprecated public java.lang.CharSequence family;
  @Deprecated public java.lang.CharSequence genus;
  @Deprecated public java.lang.CharSequence species;
  @Deprecated public java.lang.CharSequence specificEpithet;
  @Deprecated public java.lang.CharSequence infraspecificEpithet;
  @Deprecated public java.lang.CharSequence taxonRank;
  @Deprecated public java.lang.CharSequence scientificName;
  @Deprecated public java.lang.CharSequence scientificNameAuthorship;
  @Deprecated public int kingdomKey;
  @Deprecated public int phylumKey;
  @Deprecated public int classKey;
  @Deprecated public int orderKey;
  @Deprecated public int familyKey;
  @Deprecated public int genusKey;
  @Deprecated public int speciesKey;
  @Deprecated public int nubKey;
  @Deprecated public java.lang.CharSequence basisOfRecord;
  @Deprecated public double decimalLatitude;
  @Deprecated public double decimalLongitude;
  @Deprecated public java.lang.CharSequence geodeticDatum;
  @Deprecated public java.lang.CharSequence country;
  @Deprecated public java.lang.CharSequence eventDate;
  @Deprecated public int year;
  @Deprecated public int month;
  @Deprecated public int day;
  @Deprecated public java.lang.CharSequence location;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public TypedOccurrence() {}

  /**
   * All-args constructor.
   */
  public TypedOccurrence(java.lang.CharSequence occurrenceId, java.lang.CharSequence kingdom, java.lang.CharSequence phylum, java.lang.CharSequence class$, java.lang.CharSequence order, java.lang.CharSequence family, java.lang.CharSequence genus, java.lang.CharSequence species, java.lang.CharSequence specificEpithet, java.lang.CharSequence infraspecificEpithet, java.lang.CharSequence taxonRank, java.lang.CharSequence scientificName, java.lang.CharSequence scientificNameAuthorship, java.lang.Integer kingdomKey, java.lang.Integer phylumKey, java.lang.Integer classKey, java.lang.Integer orderKey, java.lang.Integer familyKey, java.lang.Integer genusKey, java.lang.Integer speciesKey, java.lang.Integer nubKey, java.lang.CharSequence basisOfRecord, java.lang.Double decimalLatitude, java.lang.Double decimalLongitude, java.lang.CharSequence geodeticDatum, java.lang.CharSequence country, java.lang.CharSequence eventDate, java.lang.Integer year, java.lang.Integer month, java.lang.Integer day, java.lang.CharSequence location) {
    this.occurrenceId = occurrenceId;
    this.kingdom = kingdom;
    this.phylum = phylum;
    this.class$ = class$;
    this.order = order;
    this.family = family;
    this.genus = genus;
    this.species = species;
    this.specificEpithet = specificEpithet;
    this.infraspecificEpithet = infraspecificEpithet;
    this.taxonRank = taxonRank;
    this.scientificName = scientificName;
    this.scientificNameAuthorship = scientificNameAuthorship;
    this.kingdomKey = kingdomKey;
    this.phylumKey = phylumKey;
    this.classKey = classKey;
    this.orderKey = orderKey;
    this.familyKey = familyKey;
    this.genusKey = genusKey;
    this.speciesKey = speciesKey;
    this.nubKey = nubKey;
    this.basisOfRecord = basisOfRecord;
    this.decimalLatitude = decimalLatitude;
    this.decimalLongitude = decimalLongitude;
    this.geodeticDatum = geodeticDatum;
    this.country = country;
    this.eventDate = eventDate;
    this.year = year;
    this.month = month;
    this.day = day;
    this.location = location;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return occurrenceId;
    case 1: return kingdom;
    case 2: return phylum;
    case 3: return class$;
    case 4: return order;
    case 5: return family;
    case 6: return genus;
    case 7: return species;
    case 8: return specificEpithet;
    case 9: return infraspecificEpithet;
    case 10: return taxonRank;
    case 11: return scientificName;
    case 12: return scientificNameAuthorship;
    case 13: return kingdomKey;
    case 14: return phylumKey;
    case 15: return classKey;
    case 16: return orderKey;
    case 17: return familyKey;
    case 18: return genusKey;
    case 19: return speciesKey;
    case 20: return nubKey;
    case 21: return basisOfRecord;
    case 22: return decimalLatitude;
    case 23: return decimalLongitude;
    case 24: return geodeticDatum;
    case 25: return country;
    case 26: return eventDate;
    case 27: return year;
    case 28: return month;
    case 29: return day;
    case 30: return location;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: occurrenceId = (java.lang.CharSequence)value$; break;
    case 1: kingdom = (java.lang.CharSequence)value$; break;
    case 2: phylum = (java.lang.CharSequence)value$; break;
    case 3: class$ = (java.lang.CharSequence)value$; break;
    case 4: order = (java.lang.CharSequence)value$; break;
    case 5: family = (java.lang.CharSequence)value$; break;
    case 6: genus = (java.lang.CharSequence)value$; break;
    case 7: species = (java.lang.CharSequence)value$; break;
    case 8: specificEpithet = (java.lang.CharSequence)value$; break;
    case 9: infraspecificEpithet = (java.lang.CharSequence)value$; break;
    case 10: taxonRank = (java.lang.CharSequence)value$; break;
    case 11: scientificName = (java.lang.CharSequence)value$; break;
    case 12: scientificNameAuthorship = (java.lang.CharSequence)value$; break;
    case 13: kingdomKey = (java.lang.Integer)value$; break;
    case 14: phylumKey = (java.lang.Integer)value$; break;
    case 15: classKey = (java.lang.Integer)value$; break;
    case 16: orderKey = (java.lang.Integer)value$; break;
    case 17: familyKey = (java.lang.Integer)value$; break;
    case 18: genusKey = (java.lang.Integer)value$; break;
    case 19: speciesKey = (java.lang.Integer)value$; break;
    case 20: nubKey = (java.lang.Integer)value$; break;
    case 21: basisOfRecord = (java.lang.CharSequence)value$; break;
    case 22: decimalLatitude = (java.lang.Double)value$; break;
    case 23: decimalLongitude = (java.lang.Double)value$; break;
    case 24: geodeticDatum = (java.lang.CharSequence)value$; break;
    case 25: country = (java.lang.CharSequence)value$; break;
    case 26: eventDate = (java.lang.CharSequence)value$; break;
    case 27: year = (java.lang.Integer)value$; break;
    case 28: month = (java.lang.Integer)value$; break;
    case 29: day = (java.lang.Integer)value$; break;
    case 30: location = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'occurrenceId' field.
   */
  public java.lang.CharSequence getOccurrenceId() {
    return occurrenceId;
  }

  /**
   * Sets the value of the 'occurrenceId' field.
   * @param value the value to set.
   */
  public void setOccurrenceId(java.lang.CharSequence value) {
    this.occurrenceId = value;
  }

  /**
   * Gets the value of the 'kingdom' field.
   */
  public java.lang.CharSequence getKingdom() {
    return kingdom;
  }

  /**
   * Sets the value of the 'kingdom' field.
   * @param value the value to set.
   */
  public void setKingdom(java.lang.CharSequence value) {
    this.kingdom = value;
  }

  /**
   * Gets the value of the 'phylum' field.
   */
  public java.lang.CharSequence getPhylum() {
    return phylum;
  }

  /**
   * Sets the value of the 'phylum' field.
   * @param value the value to set.
   */
  public void setPhylum(java.lang.CharSequence value) {
    this.phylum = value;
  }

  /**
   * Gets the value of the 'class$' field.
   */
  public java.lang.CharSequence getClass$() {
    return class$;
  }

  /**
   * Sets the value of the 'class$' field.
   * @param value the value to set.
   */
  public void setClass$(java.lang.CharSequence value) {
    this.class$ = value;
  }

  /**
   * Gets the value of the 'order' field.
   */
  public java.lang.CharSequence getOrder() {
    return order;
  }

  /**
   * Sets the value of the 'order' field.
   * @param value the value to set.
   */
  public void setOrder(java.lang.CharSequence value) {
    this.order = value;
  }

  /**
   * Gets the value of the 'family' field.
   */
  public java.lang.CharSequence getFamily() {
    return family;
  }

  /**
   * Sets the value of the 'family' field.
   * @param value the value to set.
   */
  public void setFamily(java.lang.CharSequence value) {
    this.family = value;
  }

  /**
   * Gets the value of the 'genus' field.
   */
  public java.lang.CharSequence getGenus() {
    return genus;
  }

  /**
   * Sets the value of the 'genus' field.
   * @param value the value to set.
   */
  public void setGenus(java.lang.CharSequence value) {
    this.genus = value;
  }

  /**
   * Gets the value of the 'species' field.
   */
  public java.lang.CharSequence getSpecies() {
    return species;
  }

  /**
   * Sets the value of the 'species' field.
   * @param value the value to set.
   */
  public void setSpecies(java.lang.CharSequence value) {
    this.species = value;
  }

  /**
   * Gets the value of the 'specificEpithet' field.
   */
  public java.lang.CharSequence getSpecificEpithet() {
    return specificEpithet;
  }

  /**
   * Sets the value of the 'specificEpithet' field.
   * @param value the value to set.
   */
  public void setSpecificEpithet(java.lang.CharSequence value) {
    this.specificEpithet = value;
  }

  /**
   * Gets the value of the 'infraspecificEpithet' field.
   */
  public java.lang.CharSequence getInfraspecificEpithet() {
    return infraspecificEpithet;
  }

  /**
   * Sets the value of the 'infraspecificEpithet' field.
   * @param value the value to set.
   */
  public void setInfraspecificEpithet(java.lang.CharSequence value) {
    this.infraspecificEpithet = value;
  }

  /**
   * Gets the value of the 'taxonRank' field.
   */
  public java.lang.CharSequence getTaxonRank() {
    return taxonRank;
  }

  /**
   * Sets the value of the 'taxonRank' field.
   * @param value the value to set.
   */
  public void setTaxonRank(java.lang.CharSequence value) {
    this.taxonRank = value;
  }

  /**
   * Gets the value of the 'scientificName' field.
   */
  public java.lang.CharSequence getScientificName() {
    return scientificName;
  }

  /**
   * Sets the value of the 'scientificName' field.
   * @param value the value to set.
   */
  public void setScientificName(java.lang.CharSequence value) {
    this.scientificName = value;
  }

  /**
   * Gets the value of the 'scientificNameAuthorship' field.
   */
  public java.lang.CharSequence getScientificNameAuthorship() {
    return scientificNameAuthorship;
  }

  /**
   * Sets the value of the 'scientificNameAuthorship' field.
   * @param value the value to set.
   */
  public void setScientificNameAuthorship(java.lang.CharSequence value) {
    this.scientificNameAuthorship = value;
  }

  /**
   * Gets the value of the 'kingdomKey' field.
   */
  public java.lang.Integer getKingdomKey() {
    return kingdomKey;
  }

  /**
   * Sets the value of the 'kingdomKey' field.
   * @param value the value to set.
   */
  public void setKingdomKey(java.lang.Integer value) {
    this.kingdomKey = value;
  }

  /**
   * Gets the value of the 'phylumKey' field.
   */
  public java.lang.Integer getPhylumKey() {
    return phylumKey;
  }

  /**
   * Sets the value of the 'phylumKey' field.
   * @param value the value to set.
   */
  public void setPhylumKey(java.lang.Integer value) {
    this.phylumKey = value;
  }

  /**
   * Gets the value of the 'classKey' field.
   */
  public java.lang.Integer getClassKey() {
    return classKey;
  }

  /**
   * Sets the value of the 'classKey' field.
   * @param value the value to set.
   */
  public void setClassKey(java.lang.Integer value) {
    this.classKey = value;
  }

  /**
   * Gets the value of the 'orderKey' field.
   */
  public java.lang.Integer getOrderKey() {
    return orderKey;
  }

  /**
   * Sets the value of the 'orderKey' field.
   * @param value the value to set.
   */
  public void setOrderKey(java.lang.Integer value) {
    this.orderKey = value;
  }

  /**
   * Gets the value of the 'familyKey' field.
   */
  public java.lang.Integer getFamilyKey() {
    return familyKey;
  }

  /**
   * Sets the value of the 'familyKey' field.
   * @param value the value to set.
   */
  public void setFamilyKey(java.lang.Integer value) {
    this.familyKey = value;
  }

  /**
   * Gets the value of the 'genusKey' field.
   */
  public java.lang.Integer getGenusKey() {
    return genusKey;
  }

  /**
   * Sets the value of the 'genusKey' field.
   * @param value the value to set.
   */
  public void setGenusKey(java.lang.Integer value) {
    this.genusKey = value;
  }

  /**
   * Gets the value of the 'speciesKey' field.
   */
  public java.lang.Integer getSpeciesKey() {
    return speciesKey;
  }

  /**
   * Sets the value of the 'speciesKey' field.
   * @param value the value to set.
   */
  public void setSpeciesKey(java.lang.Integer value) {
    this.speciesKey = value;
  }

  /**
   * Gets the value of the 'nubKey' field.
   */
  public java.lang.Integer getNubKey() {
    return nubKey;
  }

  /**
   * Sets the value of the 'nubKey' field.
   * @param value the value to set.
   */
  public void setNubKey(java.lang.Integer value) {
    this.nubKey = value;
  }

  /**
   * Gets the value of the 'basisOfRecord' field.
   */
  public java.lang.CharSequence getBasisOfRecord() {
    return basisOfRecord;
  }

  /**
   * Sets the value of the 'basisOfRecord' field.
   * @param value the value to set.
   */
  public void setBasisOfRecord(java.lang.CharSequence value) {
    this.basisOfRecord = value;
  }

  /**
   * Gets the value of the 'decimalLatitude' field.
   */
  public java.lang.Double getDecimalLatitude() {
    return decimalLatitude;
  }

  /**
   * Sets the value of the 'decimalLatitude' field.
   * @param value the value to set.
   */
  public void setDecimalLatitude(java.lang.Double value) {
    this.decimalLatitude = value;
  }

  /**
   * Gets the value of the 'decimalLongitude' field.
   */
  public java.lang.Double getDecimalLongitude() {
    return decimalLongitude;
  }

  /**
   * Sets the value of the 'decimalLongitude' field.
   * @param value the value to set.
   */
  public void setDecimalLongitude(java.lang.Double value) {
    this.decimalLongitude = value;
  }

  /**
   * Gets the value of the 'geodeticDatum' field.
   */
  public java.lang.CharSequence getGeodeticDatum() {
    return geodeticDatum;
  }

  /**
   * Sets the value of the 'geodeticDatum' field.
   * @param value the value to set.
   */
  public void setGeodeticDatum(java.lang.CharSequence value) {
    this.geodeticDatum = value;
  }

  /**
   * Gets the value of the 'country' field.
   */
  public java.lang.CharSequence getCountry() {
    return country;
  }

  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(java.lang.CharSequence value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'eventDate' field.
   */
  public java.lang.CharSequence getEventDate() {
    return eventDate;
  }

  /**
   * Sets the value of the 'eventDate' field.
   * @param value the value to set.
   */
  public void setEventDate(java.lang.CharSequence value) {
    this.eventDate = value;
  }

  /**
   * Gets the value of the 'year' field.
   */
  public java.lang.Integer getYear() {
    return year;
  }

  /**
   * Sets the value of the 'year' field.
   * @param value the value to set.
   */
  public void setYear(java.lang.Integer value) {
    this.year = value;
  }

  /**
   * Gets the value of the 'month' field.
   */
  public java.lang.Integer getMonth() {
    return month;
  }

  /**
   * Sets the value of the 'month' field.
   * @param value the value to set.
   */
  public void setMonth(java.lang.Integer value) {
    this.month = value;
  }

  /**
   * Gets the value of the 'day' field.
   */
  public java.lang.Integer getDay() {
    return day;
  }

  /**
   * Sets the value of the 'day' field.
   * @param value the value to set.
   */
  public void setDay(java.lang.Integer value) {
    this.day = value;
  }

  /**
   * Gets the value of the 'location' field.
   */
  public java.lang.CharSequence getLocation() {
    return location;
  }

  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(java.lang.CharSequence value) {
    this.location = value;
  }

  /** Creates a new TypedOccurrence RecordBuilder */
  public static org.gbif.pipelines.io.avro.TypedOccurrence.Builder newBuilder() {
    return new org.gbif.pipelines.io.avro.TypedOccurrence.Builder();
  }
  
  /** Creates a new TypedOccurrence RecordBuilder by copying an existing Builder */
  public static org.gbif.pipelines.io.avro.TypedOccurrence.Builder newBuilder(org.gbif.pipelines.io.avro.TypedOccurrence.Builder other) {
    return new org.gbif.pipelines.io.avro.TypedOccurrence.Builder(other);
  }
  
  /** Creates a new TypedOccurrence RecordBuilder by copying an existing TypedOccurrence instance */
  public static org.gbif.pipelines.io.avro.TypedOccurrence.Builder newBuilder(org.gbif.pipelines.io.avro.TypedOccurrence other) {
    return new org.gbif.pipelines.io.avro.TypedOccurrence.Builder(other);
  }
  
  /**
   * RecordBuilder for TypedOccurrence instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TypedOccurrence>
    implements org.apache.avro.data.RecordBuilder<TypedOccurrence> {

    private java.lang.CharSequence occurrenceId;
    private java.lang.CharSequence kingdom;
    private java.lang.CharSequence phylum;
    private java.lang.CharSequence class$;
    private java.lang.CharSequence order;
    private java.lang.CharSequence family;
    private java.lang.CharSequence genus;
    private java.lang.CharSequence species;
    private java.lang.CharSequence specificEpithet;
    private java.lang.CharSequence infraspecificEpithet;
    private java.lang.CharSequence taxonRank;
    private java.lang.CharSequence scientificName;
    private java.lang.CharSequence scientificNameAuthorship;
    private int kingdomKey;
    private int phylumKey;
    private int classKey;
    private int orderKey;
    private int familyKey;
    private int genusKey;
    private int speciesKey;
    private int nubKey;
    private java.lang.CharSequence basisOfRecord;
    private double decimalLatitude;
    private double decimalLongitude;
    private java.lang.CharSequence geodeticDatum;
    private java.lang.CharSequence country;
    private java.lang.CharSequence eventDate;
    private int year;
    private int month;
    private int day;
    private java.lang.CharSequence location;

    /** Creates a new Builder */
    private Builder() {
      super(org.gbif.pipelines.io.avro.TypedOccurrence.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.gbif.pipelines.io.avro.TypedOccurrence.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.occurrenceId)) {
        this.occurrenceId = data().deepCopy(fields()[0].schema(), other.occurrenceId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.kingdom)) {
        this.kingdom = data().deepCopy(fields()[1].schema(), other.kingdom);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.phylum)) {
        this.phylum = data().deepCopy(fields()[2].schema(), other.phylum);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.class$)) {
        this.class$ = data().deepCopy(fields()[3].schema(), other.class$);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.order)) {
        this.order = data().deepCopy(fields()[4].schema(), other.order);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.family)) {
        this.family = data().deepCopy(fields()[5].schema(), other.family);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.genus)) {
        this.genus = data().deepCopy(fields()[6].schema(), other.genus);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.species)) {
        this.species = data().deepCopy(fields()[7].schema(), other.species);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.specificEpithet)) {
        this.specificEpithet = data().deepCopy(fields()[8].schema(), other.specificEpithet);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.infraspecificEpithet)) {
        this.infraspecificEpithet = data().deepCopy(fields()[9].schema(), other.infraspecificEpithet);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.taxonRank)) {
        this.taxonRank = data().deepCopy(fields()[10].schema(), other.taxonRank);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.scientificName)) {
        this.scientificName = data().deepCopy(fields()[11].schema(), other.scientificName);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.scientificNameAuthorship)) {
        this.scientificNameAuthorship = data().deepCopy(fields()[12].schema(), other.scientificNameAuthorship);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.kingdomKey)) {
        this.kingdomKey = data().deepCopy(fields()[13].schema(), other.kingdomKey);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.phylumKey)) {
        this.phylumKey = data().deepCopy(fields()[14].schema(), other.phylumKey);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.classKey)) {
        this.classKey = data().deepCopy(fields()[15].schema(), other.classKey);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.orderKey)) {
        this.orderKey = data().deepCopy(fields()[16].schema(), other.orderKey);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.familyKey)) {
        this.familyKey = data().deepCopy(fields()[17].schema(), other.familyKey);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.genusKey)) {
        this.genusKey = data().deepCopy(fields()[18].schema(), other.genusKey);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.speciesKey)) {
        this.speciesKey = data().deepCopy(fields()[19].schema(), other.speciesKey);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.nubKey)) {
        this.nubKey = data().deepCopy(fields()[20].schema(), other.nubKey);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.basisOfRecord)) {
        this.basisOfRecord = data().deepCopy(fields()[21].schema(), other.basisOfRecord);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.decimalLatitude)) {
        this.decimalLatitude = data().deepCopy(fields()[22].schema(), other.decimalLatitude);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.decimalLongitude)) {
        this.decimalLongitude = data().deepCopy(fields()[23].schema(), other.decimalLongitude);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.geodeticDatum)) {
        this.geodeticDatum = data().deepCopy(fields()[24].schema(), other.geodeticDatum);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.country)) {
        this.country = data().deepCopy(fields()[25].schema(), other.country);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.eventDate)) {
        this.eventDate = data().deepCopy(fields()[26].schema(), other.eventDate);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.year)) {
        this.year = data().deepCopy(fields()[27].schema(), other.year);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.month)) {
        this.month = data().deepCopy(fields()[28].schema(), other.month);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.day)) {
        this.day = data().deepCopy(fields()[29].schema(), other.day);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.location)) {
        this.location = data().deepCopy(fields()[30].schema(), other.location);
        fieldSetFlags()[30] = true;
      }
    }
    
    /** Creates a Builder by copying an existing TypedOccurrence instance */
    private Builder(org.gbif.pipelines.io.avro.TypedOccurrence other) {
            super(org.gbif.pipelines.io.avro.TypedOccurrence.SCHEMA$);
      if (isValidValue(fields()[0], other.occurrenceId)) {
        this.occurrenceId = data().deepCopy(fields()[0].schema(), other.occurrenceId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.kingdom)) {
        this.kingdom = data().deepCopy(fields()[1].schema(), other.kingdom);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.phylum)) {
        this.phylum = data().deepCopy(fields()[2].schema(), other.phylum);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.class$)) {
        this.class$ = data().deepCopy(fields()[3].schema(), other.class$);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.order)) {
        this.order = data().deepCopy(fields()[4].schema(), other.order);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.family)) {
        this.family = data().deepCopy(fields()[5].schema(), other.family);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.genus)) {
        this.genus = data().deepCopy(fields()[6].schema(), other.genus);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.species)) {
        this.species = data().deepCopy(fields()[7].schema(), other.species);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.specificEpithet)) {
        this.specificEpithet = data().deepCopy(fields()[8].schema(), other.specificEpithet);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.infraspecificEpithet)) {
        this.infraspecificEpithet = data().deepCopy(fields()[9].schema(), other.infraspecificEpithet);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.taxonRank)) {
        this.taxonRank = data().deepCopy(fields()[10].schema(), other.taxonRank);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.scientificName)) {
        this.scientificName = data().deepCopy(fields()[11].schema(), other.scientificName);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.scientificNameAuthorship)) {
        this.scientificNameAuthorship = data().deepCopy(fields()[12].schema(), other.scientificNameAuthorship);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.kingdomKey)) {
        this.kingdomKey = data().deepCopy(fields()[13].schema(), other.kingdomKey);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.phylumKey)) {
        this.phylumKey = data().deepCopy(fields()[14].schema(), other.phylumKey);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.classKey)) {
        this.classKey = data().deepCopy(fields()[15].schema(), other.classKey);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.orderKey)) {
        this.orderKey = data().deepCopy(fields()[16].schema(), other.orderKey);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.familyKey)) {
        this.familyKey = data().deepCopy(fields()[17].schema(), other.familyKey);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.genusKey)) {
        this.genusKey = data().deepCopy(fields()[18].schema(), other.genusKey);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.speciesKey)) {
        this.speciesKey = data().deepCopy(fields()[19].schema(), other.speciesKey);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.nubKey)) {
        this.nubKey = data().deepCopy(fields()[20].schema(), other.nubKey);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.basisOfRecord)) {
        this.basisOfRecord = data().deepCopy(fields()[21].schema(), other.basisOfRecord);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.decimalLatitude)) {
        this.decimalLatitude = data().deepCopy(fields()[22].schema(), other.decimalLatitude);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.decimalLongitude)) {
        this.decimalLongitude = data().deepCopy(fields()[23].schema(), other.decimalLongitude);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.geodeticDatum)) {
        this.geodeticDatum = data().deepCopy(fields()[24].schema(), other.geodeticDatum);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.country)) {
        this.country = data().deepCopy(fields()[25].schema(), other.country);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.eventDate)) {
        this.eventDate = data().deepCopy(fields()[26].schema(), other.eventDate);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.year)) {
        this.year = data().deepCopy(fields()[27].schema(), other.year);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.month)) {
        this.month = data().deepCopy(fields()[28].schema(), other.month);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.day)) {
        this.day = data().deepCopy(fields()[29].schema(), other.day);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.location)) {
        this.location = data().deepCopy(fields()[30].schema(), other.location);
        fieldSetFlags()[30] = true;
      }
    }

    /** Gets the value of the 'occurrenceId' field */
    public java.lang.CharSequence getOccurrenceId() {
      return occurrenceId;
    }
    
    /** Sets the value of the 'occurrenceId' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setOccurrenceId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.occurrenceId = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'occurrenceId' field has been set */
    public boolean hasOccurrenceId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'occurrenceId' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearOccurrenceId() {
      occurrenceId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'kingdom' field */
    public java.lang.CharSequence getKingdom() {
      return kingdom;
    }
    
    /** Sets the value of the 'kingdom' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setKingdom(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.kingdom = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'kingdom' field has been set */
    public boolean hasKingdom() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'kingdom' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearKingdom() {
      kingdom = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'phylum' field */
    public java.lang.CharSequence getPhylum() {
      return phylum;
    }
    
    /** Sets the value of the 'phylum' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setPhylum(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.phylum = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'phylum' field has been set */
    public boolean hasPhylum() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'phylum' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearPhylum() {
      phylum = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'class$' field */
    public java.lang.CharSequence getClass$() {
      return class$;
    }
    
    /** Sets the value of the 'class$' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setClass$(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.class$ = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'class$' field has been set */
    public boolean hasClass$() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'class$' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearClass$() {
      class$ = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'order' field */
    public java.lang.CharSequence getOrder() {
      return order;
    }
    
    /** Sets the value of the 'order' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setOrder(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.order = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'order' field has been set */
    public boolean hasOrder() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'order' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearOrder() {
      order = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'family' field */
    public java.lang.CharSequence getFamily() {
      return family;
    }
    
    /** Sets the value of the 'family' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setFamily(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.family = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'family' field has been set */
    public boolean hasFamily() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'family' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearFamily() {
      family = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'genus' field */
    public java.lang.CharSequence getGenus() {
      return genus;
    }
    
    /** Sets the value of the 'genus' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setGenus(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.genus = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'genus' field has been set */
    public boolean hasGenus() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'genus' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearGenus() {
      genus = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'species' field */
    public java.lang.CharSequence getSpecies() {
      return species;
    }
    
    /** Sets the value of the 'species' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setSpecies(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.species = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'species' field has been set */
    public boolean hasSpecies() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'species' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearSpecies() {
      species = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'specificEpithet' field */
    public java.lang.CharSequence getSpecificEpithet() {
      return specificEpithet;
    }
    
    /** Sets the value of the 'specificEpithet' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setSpecificEpithet(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.specificEpithet = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'specificEpithet' field has been set */
    public boolean hasSpecificEpithet() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'specificEpithet' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearSpecificEpithet() {
      specificEpithet = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'infraspecificEpithet' field */
    public java.lang.CharSequence getInfraspecificEpithet() {
      return infraspecificEpithet;
    }
    
    /** Sets the value of the 'infraspecificEpithet' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setInfraspecificEpithet(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.infraspecificEpithet = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'infraspecificEpithet' field has been set */
    public boolean hasInfraspecificEpithet() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'infraspecificEpithet' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearInfraspecificEpithet() {
      infraspecificEpithet = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'taxonRank' field */
    public java.lang.CharSequence getTaxonRank() {
      return taxonRank;
    }
    
    /** Sets the value of the 'taxonRank' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setTaxonRank(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.taxonRank = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'taxonRank' field has been set */
    public boolean hasTaxonRank() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'taxonRank' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearTaxonRank() {
      taxonRank = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'scientificName' field */
    public java.lang.CharSequence getScientificName() {
      return scientificName;
    }
    
    /** Sets the value of the 'scientificName' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setScientificName(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.scientificName = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'scientificName' field has been set */
    public boolean hasScientificName() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'scientificName' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearScientificName() {
      scientificName = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'scientificNameAuthorship' field */
    public java.lang.CharSequence getScientificNameAuthorship() {
      return scientificNameAuthorship;
    }
    
    /** Sets the value of the 'scientificNameAuthorship' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setScientificNameAuthorship(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.scientificNameAuthorship = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'scientificNameAuthorship' field has been set */
    public boolean hasScientificNameAuthorship() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'scientificNameAuthorship' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearScientificNameAuthorship() {
      scientificNameAuthorship = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'kingdomKey' field */
    public java.lang.Integer getKingdomKey() {
      return kingdomKey;
    }
    
    /** Sets the value of the 'kingdomKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setKingdomKey(int value) {
      validate(fields()[13], value);
      this.kingdomKey = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'kingdomKey' field has been set */
    public boolean hasKingdomKey() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'kingdomKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearKingdomKey() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'phylumKey' field */
    public java.lang.Integer getPhylumKey() {
      return phylumKey;
    }
    
    /** Sets the value of the 'phylumKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setPhylumKey(int value) {
      validate(fields()[14], value);
      this.phylumKey = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'phylumKey' field has been set */
    public boolean hasPhylumKey() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'phylumKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearPhylumKey() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'classKey' field */
    public java.lang.Integer getClassKey() {
      return classKey;
    }
    
    /** Sets the value of the 'classKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setClassKey(int value) {
      validate(fields()[15], value);
      this.classKey = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'classKey' field has been set */
    public boolean hasClassKey() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'classKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearClassKey() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'orderKey' field */
    public java.lang.Integer getOrderKey() {
      return orderKey;
    }
    
    /** Sets the value of the 'orderKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setOrderKey(int value) {
      validate(fields()[16], value);
      this.orderKey = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'orderKey' field has been set */
    public boolean hasOrderKey() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'orderKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearOrderKey() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'familyKey' field */
    public java.lang.Integer getFamilyKey() {
      return familyKey;
    }
    
    /** Sets the value of the 'familyKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setFamilyKey(int value) {
      validate(fields()[17], value);
      this.familyKey = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'familyKey' field has been set */
    public boolean hasFamilyKey() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'familyKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearFamilyKey() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'genusKey' field */
    public java.lang.Integer getGenusKey() {
      return genusKey;
    }
    
    /** Sets the value of the 'genusKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setGenusKey(int value) {
      validate(fields()[18], value);
      this.genusKey = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'genusKey' field has been set */
    public boolean hasGenusKey() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'genusKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearGenusKey() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'speciesKey' field */
    public java.lang.Integer getSpeciesKey() {
      return speciesKey;
    }
    
    /** Sets the value of the 'speciesKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setSpeciesKey(int value) {
      validate(fields()[19], value);
      this.speciesKey = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'speciesKey' field has been set */
    public boolean hasSpeciesKey() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'speciesKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearSpeciesKey() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'nubKey' field */
    public java.lang.Integer getNubKey() {
      return nubKey;
    }
    
    /** Sets the value of the 'nubKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setNubKey(int value) {
      validate(fields()[20], value);
      this.nubKey = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'nubKey' field has been set */
    public boolean hasNubKey() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'nubKey' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearNubKey() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'basisOfRecord' field */
    public java.lang.CharSequence getBasisOfRecord() {
      return basisOfRecord;
    }
    
    /** Sets the value of the 'basisOfRecord' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setBasisOfRecord(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.basisOfRecord = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the 'basisOfRecord' field has been set */
    public boolean hasBasisOfRecord() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the 'basisOfRecord' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearBasisOfRecord() {
      basisOfRecord = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'decimalLatitude' field */
    public java.lang.Double getDecimalLatitude() {
      return decimalLatitude;
    }
    
    /** Sets the value of the 'decimalLatitude' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setDecimalLatitude(double value) {
      validate(fields()[22], value);
      this.decimalLatitude = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the 'decimalLatitude' field has been set */
    public boolean hasDecimalLatitude() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the 'decimalLatitude' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearDecimalLatitude() {
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'decimalLongitude' field */
    public java.lang.Double getDecimalLongitude() {
      return decimalLongitude;
    }
    
    /** Sets the value of the 'decimalLongitude' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setDecimalLongitude(double value) {
      validate(fields()[23], value);
      this.decimalLongitude = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the 'decimalLongitude' field has been set */
    public boolean hasDecimalLongitude() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the 'decimalLongitude' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearDecimalLongitude() {
      fieldSetFlags()[23] = false;
      return this;
    }

    /** Gets the value of the 'geodeticDatum' field */
    public java.lang.CharSequence getGeodeticDatum() {
      return geodeticDatum;
    }
    
    /** Sets the value of the 'geodeticDatum' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setGeodeticDatum(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.geodeticDatum = value;
      fieldSetFlags()[24] = true;
      return this; 
    }
    
    /** Checks whether the 'geodeticDatum' field has been set */
    public boolean hasGeodeticDatum() {
      return fieldSetFlags()[24];
    }
    
    /** Clears the value of the 'geodeticDatum' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearGeodeticDatum() {
      geodeticDatum = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /** Gets the value of the 'country' field */
    public java.lang.CharSequence getCountry() {
      return country;
    }
    
    /** Sets the value of the 'country' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setCountry(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.country = value;
      fieldSetFlags()[25] = true;
      return this; 
    }
    
    /** Checks whether the 'country' field has been set */
    public boolean hasCountry() {
      return fieldSetFlags()[25];
    }
    
    /** Clears the value of the 'country' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearCountry() {
      country = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /** Gets the value of the 'eventDate' field */
    public java.lang.CharSequence getEventDate() {
      return eventDate;
    }
    
    /** Sets the value of the 'eventDate' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setEventDate(java.lang.CharSequence value) {
      validate(fields()[26], value);
      this.eventDate = value;
      fieldSetFlags()[26] = true;
      return this; 
    }
    
    /** Checks whether the 'eventDate' field has been set */
    public boolean hasEventDate() {
      return fieldSetFlags()[26];
    }
    
    /** Clears the value of the 'eventDate' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearEventDate() {
      eventDate = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /** Gets the value of the 'year' field */
    public java.lang.Integer getYear() {
      return year;
    }
    
    /** Sets the value of the 'year' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setYear(int value) {
      validate(fields()[27], value);
      this.year = value;
      fieldSetFlags()[27] = true;
      return this; 
    }
    
    /** Checks whether the 'year' field has been set */
    public boolean hasYear() {
      return fieldSetFlags()[27];
    }
    
    /** Clears the value of the 'year' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearYear() {
      fieldSetFlags()[27] = false;
      return this;
    }

    /** Gets the value of the 'month' field */
    public java.lang.Integer getMonth() {
      return month;
    }
    
    /** Sets the value of the 'month' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setMonth(int value) {
      validate(fields()[28], value);
      this.month = value;
      fieldSetFlags()[28] = true;
      return this; 
    }
    
    /** Checks whether the 'month' field has been set */
    public boolean hasMonth() {
      return fieldSetFlags()[28];
    }
    
    /** Clears the value of the 'month' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearMonth() {
      fieldSetFlags()[28] = false;
      return this;
    }

    /** Gets the value of the 'day' field */
    public java.lang.Integer getDay() {
      return day;
    }
    
    /** Sets the value of the 'day' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setDay(int value) {
      validate(fields()[29], value);
      this.day = value;
      fieldSetFlags()[29] = true;
      return this; 
    }
    
    /** Checks whether the 'day' field has been set */
    public boolean hasDay() {
      return fieldSetFlags()[29];
    }
    
    /** Clears the value of the 'day' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearDay() {
      fieldSetFlags()[29] = false;
      return this;
    }

    /** Gets the value of the 'location' field */
    public java.lang.CharSequence getLocation() {
      return location;
    }
    
    /** Sets the value of the 'location' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder setLocation(java.lang.CharSequence value) {
      validate(fields()[30], value);
      this.location = value;
      fieldSetFlags()[30] = true;
      return this; 
    }
    
    /** Checks whether the 'location' field has been set */
    public boolean hasLocation() {
      return fieldSetFlags()[30];
    }
    
    /** Clears the value of the 'location' field */
    public org.gbif.pipelines.io.avro.TypedOccurrence.Builder clearLocation() {
      location = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    @Override
    public TypedOccurrence build() {
      try {
        TypedOccurrence record = new TypedOccurrence();
        record.occurrenceId = fieldSetFlags()[0] ? this.occurrenceId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.kingdom = fieldSetFlags()[1] ? this.kingdom : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.phylum = fieldSetFlags()[2] ? this.phylum : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.class$ = fieldSetFlags()[3] ? this.class$ : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.order = fieldSetFlags()[4] ? this.order : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.family = fieldSetFlags()[5] ? this.family : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.genus = fieldSetFlags()[6] ? this.genus : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.species = fieldSetFlags()[7] ? this.species : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.specificEpithet = fieldSetFlags()[8] ? this.specificEpithet : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.infraspecificEpithet = fieldSetFlags()[9] ? this.infraspecificEpithet : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.taxonRank = fieldSetFlags()[10] ? this.taxonRank : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.scientificName = fieldSetFlags()[11] ? this.scientificName : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.scientificNameAuthorship = fieldSetFlags()[12] ? this.scientificNameAuthorship : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.kingdomKey = fieldSetFlags()[13] ? this.kingdomKey : (java.lang.Integer) defaultValue(fields()[13]);
        record.phylumKey = fieldSetFlags()[14] ? this.phylumKey : (java.lang.Integer) defaultValue(fields()[14]);
        record.classKey = fieldSetFlags()[15] ? this.classKey : (java.lang.Integer) defaultValue(fields()[15]);
        record.orderKey = fieldSetFlags()[16] ? this.orderKey : (java.lang.Integer) defaultValue(fields()[16]);
        record.familyKey = fieldSetFlags()[17] ? this.familyKey : (java.lang.Integer) defaultValue(fields()[17]);
        record.genusKey = fieldSetFlags()[18] ? this.genusKey : (java.lang.Integer) defaultValue(fields()[18]);
        record.speciesKey = fieldSetFlags()[19] ? this.speciesKey : (java.lang.Integer) defaultValue(fields()[19]);
        record.nubKey = fieldSetFlags()[20] ? this.nubKey : (java.lang.Integer) defaultValue(fields()[20]);
        record.basisOfRecord = fieldSetFlags()[21] ? this.basisOfRecord : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.decimalLatitude = fieldSetFlags()[22] ? this.decimalLatitude : (java.lang.Double) defaultValue(fields()[22]);
        record.decimalLongitude = fieldSetFlags()[23] ? this.decimalLongitude : (java.lang.Double) defaultValue(fields()[23]);
        record.geodeticDatum = fieldSetFlags()[24] ? this.geodeticDatum : (java.lang.CharSequence) defaultValue(fields()[24]);
        record.country = fieldSetFlags()[25] ? this.country : (java.lang.CharSequence) defaultValue(fields()[25]);
        record.eventDate = fieldSetFlags()[26] ? this.eventDate : (java.lang.CharSequence) defaultValue(fields()[26]);
        record.year = fieldSetFlags()[27] ? this.year : (java.lang.Integer) defaultValue(fields()[27]);
        record.month = fieldSetFlags()[28] ? this.month : (java.lang.Integer) defaultValue(fields()[28]);
        record.day = fieldSetFlags()[29] ? this.day : (java.lang.Integer) defaultValue(fields()[29]);
        record.location = fieldSetFlags()[30] ? this.location : (java.lang.CharSequence) defaultValue(fields()[30]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
